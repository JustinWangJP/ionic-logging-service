var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/LoggingViewerComponent.html",[0,0.221,1,0.439]],["body/components/LoggingViewerComponent.html",[0,0.374,1,0.549,2,0.634,3,0.318,4,0.318,5,0.612,6,0.612,7,0.612,8,0.612,9,0.245,10,0.73,11,2.253,12,0.952,13,0.787,14,0.97,15,0.896,16,1.111,17,0.97,18,0.97,19,0.97,20,0.97,21,0.97,22,1.205,23,1.49,24,0.612,25,1.589,26,0.863,27,0.795,28,0.492,29,0.97,30,2.453,31,0.97,32,1.975,33,0.318,34,0.634,35,1.352,36,2.453,37,0.97,38,2.79,39,1.975,40,1.975,41,2.79,42,1.848,43,1.494,44,1.508,45,2.588,46,0.787,47,0.612,48,1.35,49,0.895,50,1.442,51,1.247,52,0.787,53,0.896,54,0.787,55,0.977,56,0.085,57,1.442,58,0.775,59,0.977,60,0.634,61,1.247,62,1.508,63,1.508,64,1.508,65,1.695,66,1.508,67,1.508,68,1.508,69,1.508,70,1.247,71,1.665,72,1.985,73,2.831,74,1.4,75,1.4,76,1.975,77,3.708,78,1.247,79,3.849,80,1.975,81,1.371,82,2.79,83,3.235,84,3.906,85,2.13,86,2.79,87,2.79,88,1.975,89,1.247,90,0.976,91,1.2,92,1.508,93,1.975,94,1.211,95,1.508,96,1.247,97,1.975,98,1.975,99,1.975,100,1.508,101,1.975,102,1.247,103,1.2,104,1.2,105,1.247,106,1.2,107,1.2,108,1.2,109,0.97,110,1.508,111,1.975,112,1.975,113,1.975,114,1.247,115,1.975,116,0.711,117,1.508,118,0.318,119,1.49,120,0.757,121,1.247,122,0.318,123,0.612,124,0.757,125,1.247,126,0.318,127,0.4,128,1.289,129,1.247,130,1.247,131,0.757,132,0.497,133,1.247,134,1.038,135,0.977,136,0.497,137,0.977,138,0.977,139,0.757,140,1.247,141,1.247,142,1.975,143,2.453,144,1.2,145,1.247,146,0.97,147,1.2,148,0.952,149,1.247,150,1.247,151,0.757,152,1.247,153,0.757,154,0.757,155,1.247,156,0.757,157,1.247,158,1.247,159,1.49,160,1.247,161,1.247,162,1.508,163,0.952,164,0.952,165,1.247,166,1.247,167,0.952,168,1.247,169,1.247,170,2.453,171,1.247,172,1.247,173,0.952,174,2.79,175,1.247,176,1.247,177,1.247,178,1.247,179,1.247,180,1.247,181,1.247,182,1.247,183,1.975,184,1.247,185,1.975,186,1.975,187,1.975,188,1.975,189,1.975,190,0.612,191,0.97,192,0.97,193,0.497,194,1.371,195,0.612,196,1.247,197,0.612,198,0.245,199,0.612,200,0.181,201,0.612,202,0.245,203,0.497,204,0.612,205,0.023,206,0.036,207,0.023]],["title/injectables/LoggingViewerFilterService.html",[49,0.568,208,1.095]],["body/injectables/LoggingViewerFilterService.html",[3,0.505,4,0.505,9,0.39,10,0.779,13,1.13,15,1.13,26,0.505,27,0.731,28,0.597,33,0.505,34,0.898,35,1.271,46,1.114,47,0.974,48,1.578,49,0.712,50,1.535,52,1.114,53,1.353,54,1.114,55,1.291,56,0.084,57,1.291,58,0.897,59,1.291,60,1.366,65,1.7,71,1.73,72,1.824,74,1.403,75,1.114,81,2.048,90,1.338,91,2.607,92,2.688,94,1.291,116,0.712,118,0.505,122,0.946,126,0.505,127,0.636,128,1.291,132,0.79,134,0.636,135,0.79,136,0.79,137,0.79,138,0.79,146,1.893,159,2.14,162,2.475,163,1.513,167,1.513,205,0.036,206,0.051,207,0.036,208,1.374,209,1.982,210,1.513,211,2.797,212,2.797,213,3.961,214,2.797,215,1.982,216,1.7,217,2.797,218,3.521,219,1.982,220,2.797,221,1.7,222,1.982,223,1.982,224,1.982,225,1.982,226,3.521,227,3.521,228,2.797,229,1.982,230,1.982,231,1.982,232,1.982,233,1.982,234,3.242,235,1.513,236,3.242,237,1.982,238,1.982,239,2.797,240,1.982]],["title/components/LoggingViewerLevelsComponent.html",[0,0.221,198,0.439]],["body/components/LoggingViewerLevelsComponent.html",[0,0.403,1,0.329,2,0.795,3,0.829,4,0.426,5,0.822,6,0.822,7,0.822,8,0.822,9,0.329,10,0.74,13,0.537,14,1.216,15,0.795,16,0.986,17,1.216,18,1.216,19,1.216,20,1.216,21,1.216,22,1.447,23,1.79,24,0.822,25,1.787,26,0.958,27,0.833,28,0.646,29,1.216,31,1.216,33,0.426,34,0.795,35,1.358,37,1.216,42,2.111,43,1.706,46,0.986,47,0.822,48,1.449,49,0.984,50,1.449,52,0.986,53,0.795,54,0.986,55,0.667,56,0.084,57,1.173,58,0.75,59,0.667,60,1.045,71,1.216,72,1.599,74,1.173,75,1.449,81,1.706,90,0.537,94,1.173,103,1.504,104,1.504,106,1.504,107,1.504,108,1.504,109,1.216,116,0.829,118,0.426,119,1.504,120,1.017,122,0.426,123,0.822,124,1.017,126,0.426,127,0.537,128,1.173,131,1.017,132,0.667,134,1.045,135,1.297,136,0.667,137,1.297,138,1.297,139,1.017,144,1.017,146,0.822,147,1.017,151,1.017,153,1.017,154,1.017,156,1.017,164,2.249,190,0.822,191,1.216,192,1.216,193,0.667,194,1.599,195,0.822,197,0.822,198,0.64,199,0.822,200,0.243,201,0.822,202,0.329,203,0.667,204,0.822,205,0.03,206,0.045,207,0.03,221,1.504,235,2.249,241,2.286,242,1.278,243,3.763,244,1.978,245,2.946,246,2.475,247,2.946,248,2.946,249,3.474,250,1.674,251,1.674,252,1.674,253,1.674,254,1.89,255,1.89,256,1.674,257,1.216,258,2.946,259,2.946,260,1.674,261,2.475,262,1.674,263,1.674,264,1.674,265,1.674,266,3.255,267,1.278,268,1.278,269,2.475]],["title/components/LoggingViewerModalComponent.html",[0,0.221,200,0.324]],["body/components/LoggingViewerModalComponent.html",[0,0.314,1,0.416,2,0.679,3,0.346,4,0.346,5,0.668,6,0.668,7,0.668,8,0.668,9,0.268,10,0.748,13,0.436,15,0.679,16,0.842,21,1.039,22,1.274,24,0.668,25,1.649,26,0.986,27,0.801,28,0.639,29,1.039,31,1.039,33,0.346,34,0.679,35,1.381,37,1.039,43,1.438,45,2.42,46,0.842,48,1.395,50,1.543,52,0.842,53,0.679,54,0.842,55,0.542,56,0.085,57,1.033,58,0.807,59,0.542,60,1.017,62,1.614,63,1.614,64,1.614,65,1.285,66,1.614,67,1.614,68,1.614,69,1.614,74,1.166,75,1.166,85,1.614,90,0.679,94,1.033,95,1.614,110,2.234,116,0.807,118,0.346,122,0.346,126,0.346,127,0.436,128,1.263,132,0.542,134,0.833,135,1.033,136,0.542,137,1.033,138,1.033,159,1.576,173,1.038,190,0.668,191,1.039,192,1.039,193,0.542,194,1.438,195,0.668,197,0.668,198,0.416,199,0.668,200,0.487,201,0.668,202,0.416,203,0.542,204,0.668,205,0.025,206,0.038,207,0.025,257,1.438,270,2.311,271,1.038,272,2.311,273,1.614,274,2.594,275,2.114,276,2.594,277,2.903,278,2.422,279,2.926,280,3.17,281,1.981,282,3.17,283,1.36,284,3.356,285,3.503,286,3.503,287,1.36,288,1.36,289,2.114,290,2.114,291,2.114,292,2.114,293,2.114,294,2.114,295,1.337,296,1.36,297,2.926,298,2.926,299,2.114,300,1.36,301,2.114,302,2.114,303,2.234,304,2.926,305,1.36,306,2.42,307,2.234,308,2.114,309,1.614,310,1.36,311,2.114,312,2.114,313,1.614,314,1.285,315,1.36,316,1.614,317,1.981,318,1.981,319,1.36,320,1.36,321,2.114,322,2.114,323,1.36,324,1.36,325,0.826,326,1.36,327,1.36,328,1.36,329,1.36,330,2.114,331,1.36,332,1.36,333,2.114,334,2.114,335,2.114,336,2.114,337,1.36,338,2.114,339,1.36,340,2.594,341,1.36,342,1.36,343,1.36,344,1.36,345,1.36,346,1.36,347,2.114,348,1.614,349,1.614,350,1.36,351,1.36,352,1.36,353,1.038,354,1.36,355,2.594,356,2.114,357,2.114,358,1.038,359,2.114,360,2.114]],["title/modules/LoggingViewerModule.html",[361,1.355,362,1.095]],["body/modules/LoggingViewerModule.html",[1,0.818,3,0.706,4,0.706,9,0.545,10,0.545,11,1.684,27,0.818,28,0.626,49,0.977,56,0.084,116,1.121,118,0.706,123,1.362,126,0.706,127,0.89,198,0.818,200,0.604,202,0.818,205,0.05,206,0.064,207,0.05,241,1.684,270,1.684,325,1.684,362,1.72,363,1.684,364,2.772,365,3.501,366,3.501,367,3.501,368,2.673,369,3.501,370,2.116,371,3.501,372,2.772,373,3.501,374,2.772,375,2.772,376,1.684,377,2.772,378,2.772,379,2.116,380,2.772]],["title/components/LoggingViewerSearchComponent.html",[0,0.221,202,0.439]],["body/components/LoggingViewerSearchComponent.html",[0,0.403,1,0.332,2,0.8,3,0.43,4,0.43,5,0.829,6,0.829,7,0.829,8,0.829,9,0.332,10,0.742,13,0.542,14,1.224,15,1.049,16,0.992,17,1.224,18,1.224,19,1.224,20,1.224,21,1.224,22,1.454,23,1.799,24,0.829,25,1.792,26,0.961,27,0.834,28,0.647,29,1.224,31,1.224,33,0.43,34,0.8,35,1.338,37,1.224,42,2.118,43,1.713,44,1.902,46,0.992,47,0.829,48,1.453,49,0.986,50,1.453,52,0.992,53,0.8,54,0.992,55,0.672,56,0.084,57,1.179,58,0.754,59,0.672,60,1.049,71,1.224,74,1.179,75,1.453,90,1.385,91,2.118,94,1.179,103,1.514,104,1.514,106,1.514,107,1.514,108,1.514,109,1.224,116,0.833,117,1.902,118,0.43,119,1.514,120,1.026,122,0.43,123,0.829,124,1.026,126,0.43,127,0.542,128,1.179,131,1.026,132,0.672,134,1.049,135,1.302,136,0.672,137,1.302,138,1.302,139,1.026,144,1.026,146,0.829,147,1.026,151,1.026,153,1.026,154,1.026,156,1.026,190,0.829,191,1.224,192,1.224,193,0.672,194,1.606,195,0.829,197,0.829,198,0.332,199,0.829,200,0.245,201,0.829,202,0.643,203,0.672,204,0.829,205,0.031,206,0.045,207,0.031,221,1.514,244,1.514,254,1.902,255,1.902,267,1.289,268,1.289,314,1.514,376,2.293,381,1.289,382,2.495,383,2.96,384,2.491,385,3.486,386,2.661,387,1.688,388,1.688,389,2.491,390,1.688,391,1.688,392,1.688,393,1.688,394,1.688,395,1.688,396,2.491,397,3.268,398,2.96]],["title/interfaces/LoggingViewerTranslation.html",[295,0.888,399,1.095]],["body/interfaces/LoggingViewerTranslation.html",[3,0.742,4,0.742,9,0.573,10,0.573,13,0.935,28,0.423,33,0.742,34,1.159,56,0.083,58,1,60,1.425,90,1.159,126,0.742,200,0.423,205,0.053,206,0.066,207,0.053,216,1.77,257,1.774,272,2.194,278,1.77,295,1.438,306,3.282,307,2.757,313,2.757,314,2.194,348,3.133,349,3.282,382,2.757,386,2.757,399,1.431,400,2.913,401,2.224,402,2.913,403,2.913,404,3.611,405,3.611,406,3.611,407,3.611,408,3.611]],["title/coverage.html",[409,2.317]],["body/coverage.html",[0,0.414,1,0.608,9,0.608,10,0.858,11,1.877,12,2.358,28,0.647,49,0.787,53,0.991,56,0.081,58,0.787,198,0.608,200,0.449,202,0.608,205,0.056,206,0.068,207,0.056,208,1.517,210,2.358,241,1.877,242,2.358,270,1.877,271,2.358,295,1.23,376,1.877,381,2.358,399,1.517,401,2.358,409,2.358,410,2.358,411,3.089,412,3.089,413,4.36,414,3.089,415,3.744,416,3.744,417,3.089,418,3.089,419,3.089]],["title/dependencies.html",[420,1.425,421,1.628]],["body/dependencies.html",[26,0.873,27,0.674,56,0.082,118,0.873,122,0.873,205,0.062,206,0.072,207,0.062,325,2.082,370,2.616,421,2.082,422,3.427,423,3.213,424,3.04,425,3.427]],["title/index.html",[33,0.475,426,1.866,427,1.866]],["body/index.html",[0,0.304,1,0.734,2,1.118,14,1.115,15,0.728,16,0.904,17,1.115,18,1.115,19,1.509,20,1.509,26,1.079,27,0.808,28,0.597,35,0.728,56,0.081,72,1.509,73,1.733,81,1.115,100,1.733,109,1.509,116,0.782,122,0.578,134,0.728,148,1.733,193,1.387,198,0.685,200,0.542,202,0.685,203,1.224,205,0.041,206,0.056,207,0.041,216,1.866,244,2.267,257,1.509,272,2.267,273,1.733,277,3.137,278,1.379,281,1.733,295,0.904,303,1.733,309,1.733,316,1.733,317,1.733,318,1.733,353,2.345,358,1.733,361,1.379,362,1.711,368,1.733,379,1.733,410,1.733,420,1.733,421,1.379,423,2.345,424,2.658,428,2.269,429,2.269,430,3.072,431,2.269,432,2.269,433,3.898,434,2.269,435,3.072,436,2.269,437,2.269,438,2.269,439,2.269,440,2.269,441,2.269,442,2.269,443,3.482,444,2.269,445,2.269,446,2.269,447,2.269,448,2.269,449,2.269,450,3.072,451,2.269,452,2.269,453,2.269,454,3.072,455,2.269,456,2.269,457,2.269,458,2.269,459,2.269,460,3.072,461,2.269,462,2.269,463,2.269,464,2.269,465,2.269,466,2.269,467,2.269,468,3.072,469,2.269,470,2.269,471,2.269,472,2.269,473,2.269,474,2.269,475,3.482,476,2.269,477,2.269,478,2.269,479,3.482,480,3.482,481,3.072,482,2.269,483,2.269,484,2.269,485,2.269,486,3.072,487,2.269,488,2.269,489,3.482,490,2.269,491,2.269,492,2.269,493,2.269,494,2.269,495,2.269,496,2.269,497,3.072,498,2.269]],["title/modules.html",[363,1.844]],["body/modules.html",[56,0.074,205,0.065,206,0.074,207,0.065,362,1.753,363,2.169,499,3.569]],["title/overview.html",[500,2.317]],["body/overview.html",[2,1.128,56,0.073,205,0.064,206,0.073,207,0.064,208,1.727,361,2.136,399,1.727,500,2.683,501,4.252,502,3.515]]],"invertedIndex":[["",{"_index":56,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":170,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["1",{"_index":501,"title":{},"body":{"overview.html":{}}}],["1.0.1",{"_index":440,"title":{},"body":{"index.html":{}}}],["10/10",{"_index":416,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":413,"title":{},"body":{"coverage.html":{}}}],["2.0.0",{"_index":437,"title":{},"body":{"index.html":{}}}],["3.9.0",{"_index":441,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":414,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":502,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":438,"title":{},"body":{"index.html":{}}}],["4.7.0",{"_index":436,"title":{},"body":{"index.html":{}}}],["4/4",{"_index":417,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":424,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["7.0.0",{"_index":439,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":415,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":435,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":423,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["a.timestamp.gettime",{"_index":180,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["abbrechen",{"_index":351,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["accessors",{"_index":214,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["according",{"_index":291,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["add",{"_index":468,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":453,"title":{},"body":{"index.html":{}}}],["allows",{"_index":454,"title":{},"body":{"index.html":{}}}],["android",{"_index":406,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["angular",{"_index":434,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":370,"title":{},"body":{"modules/LoggingViewerModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":372,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["another",{"_index":491,"title":{},"body":{"index.html":{}}}],["api",{"_index":497,"title":{},"body":{"index.html":{}}}],["app",{"_index":443,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":463,"title":{},"body":{"index.html":{}}}],["applies",{"_index":483,"title":{},"body":{"index.html":{}}}],["arbitrary",{"_index":455,"title":{},"body":{"index.html":{}}}],["async",{"_index":281,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["await",{"_index":353,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["b",{"_index":179,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["b.timestamp.gettime",{"_index":181,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["bar",{"_index":382,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["browse",{"_index":499,"title":{},"body":{"modules.html":{}}}],["button",{"_index":307,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["callback",{"_index":254,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["called",{"_index":298,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["cancel",{"_index":306,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["changed",{"_index":221,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["check",{"_index":79,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["class",{"_index":127,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["clean",{"_index":103,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["clicked",{"_index":308,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["close",{"_index":313,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["comma",{"_index":62,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["commonmodule",{"_index":369,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["complete",{"_index":451,"title":{},"body":{"index.html":{}}}],["completely",{"_index":495,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":195,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["componentprops",{"_index":475,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{},"overview.html":{}}}],["condition",{"_index":83,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["configures",{"_index":302,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["const",{"_index":134,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["constructor(loggingservice",{"_index":47,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["constructor(platform",{"_index":283,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["containing",{"_index":273,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["contains",{"_index":484,"title":{},"body":{"index.html":{}}}],["controlling",{"_index":312,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["coverage",{"_index":409,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":52,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["ctor",{"_index":136,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["current",{"_index":15,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["currently",{"_index":316,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["data",{"_index":109,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["date:'dd.mm.yyyy",{"_index":184,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["date:\\'dd.mm.yyyy",{"_index":196,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["de",{"_index":318,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["debug",{"_index":235,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{}}}],["declarations",{"_index":365,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["dependencies",{"_index":421,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["describes",{"_index":402,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["development",{"_index":446,"title":{},"body":{"index.html":{}}}],["directive",{"_index":193,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["displaying",{"_index":14,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["displays",{"_index":482,"title":{},"body":{"index.html":{}}}],["docs",{"_index":336,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["documentation",{"_index":410,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["done",{"_index":107,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["embedded",{"_index":17,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["emits",{"_index":227,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["empty",{"_index":389,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["en",{"_index":317,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["english",{"_index":293,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["entrycomponents",{"_index":380,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["error",{"_index":259,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["event",{"_index":146,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["eventemitter",{"_index":218,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["eventhandler",{"_index":297,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["export",{"_index":126,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["exports",{"_index":367,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["expression",{"_index":456,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["fill",{"_index":496,"title":{},"body":{"index.html":{}}}],["filter",{"_index":71,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["filter.service",{"_index":123,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["filter.service.ts",{"_index":210,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"coverage.html":{}}}],["filter.service.ts:14",{"_index":219,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:18",{"_index":215,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:42",{"_index":223,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:50",{"_index":225,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:59",{"_index":230,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:67",{"_index":232,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filterchanged",{"_index":213,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filterchangedsubscription",{"_index":131,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["filtering",{"_index":244,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["filterlogmessages",{"_index":38,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbylevel",{"_index":39,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbylevel(message",{"_index":76,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbysearch",{"_index":40,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbysearch(message",{"_index":88,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["flag",{"_index":311,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["formsmodule",{"_index":371,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["fulfill",{"_index":115,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["fulfills",{"_index":82,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["getlevel",{"_index":222,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["gets",{"_index":92,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["getsearch",{"_index":229,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["getting",{"_index":426,"title":{"index.html":{}},"body":{}}],["gettranslation",{"_index":279,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["gettranslation().cancel",{"_index":360,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["gettranslation().title",{"_index":359,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["helper",{"_index":289,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["hh:mm:ss",{"_index":185,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["icon",{"_index":408,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["identifier",{"_index":411,"title":{},"body":{"coverage.html":{}}}],["ignored",{"_index":322,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["implemented",{"_index":452,"title":{},"body":{"index.html":{}}}],["implements",{"_index":21,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["import",{"_index":116,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["imports",{"_index":379,"title":{},"body":{"modules/LoggingViewerModule.html":{},"index.html":{}}}],["include",{"_index":470,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["initialize",{"_index":106,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["initializes",{"_index":301,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["injectable",{"_index":208,"title":{"injectables/LoggingViewerFilterService.html":{}},"body":{"injectables/LoggingViewerFilterService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["input",{"_index":117,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["inputs",{"_index":44,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["install",{"_index":461,"title":{},"body":{"index.html":{}}}],["instance",{"_index":54,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["instead",{"_index":68,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["interface",{"_index":399,"title":{"interfaces/LoggingViewerTranslation.html":{}},"body":{"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":400,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["internal",{"_index":217,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["ion",{"_index":471,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":26,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":325,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"dependencies.html":{}}}],["ionic/core",{"_index":324,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ionicmodule",{"_index":373,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["ionicmodule.forroot(appcomponent",{"_index":464,"title":{},"body":{"index.html":{}}}],["ionicons",{"_index":425,"title":{},"body":{"dependencies.html":{}}}],["ionviewdidenter",{"_index":280,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ios",{"_index":405,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["isandroid",{"_index":276,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["issue",{"_index":493,"title":{},"body":{"index.html":{}}}],["language",{"_index":277,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["languagede",{"_index":332,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["languageen",{"_index":331,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["latest",{"_index":428,"title":{},"body":{"index.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["level",{"_index":81,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"index.html":{}}}],["level(value",{"_index":238,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["levels",{"_index":243,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels'},{'name",{"_index":199,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["levels.component",{"_index":375,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["levels.component.html",{"_index":246,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.scss",{"_index":245,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts",{"_index":242,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"coverage.html":{}}}],["levels.component.ts:25",{"_index":256,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:30",{"_index":260,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:33",{"_index":250,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:62",{"_index":252,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:80",{"_index":251,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:92",{"_index":253,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels/logging",{"_index":241,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"modules/LoggingViewerModule.html":{},"coverage.html":{}}}],["levels>&lt;/ionic",{"_index":262,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levelvalue",{"_index":163,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["line:completed",{"_index":335,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["list",{"_index":64,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["load",{"_index":97,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loaded",{"_index":66,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["loadlogmessages",{"_index":41,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["local",{"_index":112,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["localstorage",{"_index":67,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["localstoragekey",{"_index":175,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["localstoragekeys",{"_index":45,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["log",{"_index":72,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"index.html":{}}}],["logged",{"_index":148,"title":{},"body":{"components/LoggingViewerComponent.html":{},"index.html":{}}}],["logger",{"_index":94,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["logging",{"_index":27,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["loggingservice",{"_index":48,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.component",{"_index":133,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.filter.service",{"_index":233,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.levels.component",{"_index":263,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.modal.component",{"_index":337,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.search.component",{"_index":395,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["loggingservice.logmessageschanged",{"_index":145,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loggingservice](../../../ionic",{"_index":140,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loggingviewercomponent",{"_index":1,"title":{"components/LoggingViewerComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewercomponent](loggingviewercomponent.html",{"_index":327,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingviewerfilterservice",{"_index":49,"title":{"injectables/LoggingViewerFilterService.html":{}},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["loggingviewerfilterservice.filterchanged",{"_index":151,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["loggingviewerfilterservice](loggingviewerfilterservice.html",{"_index":139,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["loggingviewerlevelscomponent",{"_index":198,"title":{"components/LoggingViewerLevelsComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewerlevelscomponent](loggingviewerlevelscomponent.html",{"_index":328,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingviewermodalcomponent",{"_index":200,"title":{"components/LoggingViewerModalComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewermodalmanager.openmodal",{"_index":488,"title":{},"body":{"index.html":{}}}],["loggingviewermodule",{"_index":362,"title":{"modules/LoggingViewerModule.html":{}},"body":{"modules/LoggingViewerModule.html":{},"index.html":{},"modules.html":{}}}],["loggingviewersearchcomponent",{"_index":202,"title":{"components/LoggingViewerSearchComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewersearchcomponent](loggingviewersearchcomponent.html",{"_index":329,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingviewertranslation",{"_index":295,"title":{"interfaces/LoggingViewerTranslation.html":{}},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["loglevel",{"_index":269,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["loglevelconverter",{"_index":121,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loglevelconverter.levelfromstring(levelvalue",{"_index":166,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loglevelconverter.levelfromstring(message.level",{"_index":165,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loglevels",{"_index":247,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["logmessage",{"_index":77,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.level",{"_index":186,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.logger",{"_index":187,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.methodname",{"_index":188,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.timestamp",{"_index":183,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessages",{"_index":129,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessageschangedsubscription",{"_index":130,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessagesfordisplay",{"_index":36,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logs",{"_index":16,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["lt;ionic",{"_index":124,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["mainly",{"_index":101,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["meant",{"_index":445,"title":{},"body":{"index.html":{}}}],["memory",{"_index":69,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["message",{"_index":84,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message's",{"_index":80,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message.logger.search(searchvalue",{"_index":169,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message.message.join(\"|\").search(searchvalue",{"_index":172,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message.methodname.search(searchvalue",{"_index":171,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["messagepart",{"_index":189,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["messages",{"_index":73,"title":{},"body":{"components/LoggingViewerComponent.html":{},"index.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["method",{"_index":95,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["methodname",{"_index":135,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["methods",{"_index":37,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["modal",{"_index":272,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["modal'},{'name",{"_index":201,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["modal.component",{"_index":378,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["modal.component.html",{"_index":275,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.scss",{"_index":274,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts",{"_index":271,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:106",{"_index":305,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:121",{"_index":288,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:29",{"_index":315,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:35",{"_index":320,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:40",{"_index":319,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:45",{"_index":310,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:51",{"_index":287,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:78",{"_index":300,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:96",{"_index":296,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.present",{"_index":478,"title":{},"body":{"index.html":{}}}],["modal/logging",{"_index":270,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":285,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modified",{"_index":152,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["modifies",{"_index":268,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["module",{"_index":361,"title":{"modules/LoggingViewerModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":363,"title":{"modules.html":{}},"body":{"modules/LoggingViewerModule.html":{},"modules.html":{}}}],["multi",{"_index":479,"title":{},"body":{"index.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["navparams",{"_index":286,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["navparams.get(\"language",{"_index":339,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["navparams.get(\"localstoragekeys",{"_index":342,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["navparams.get(\"translation",{"_index":341,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["necessary",{"_index":473,"title":{},"body":{"index.html":{}}}],["need",{"_index":481,"title":{},"body":{"index.html":{}}}],["needed",{"_index":216,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["new",{"_index":53,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["next",{"_index":334,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ngmodule",{"_index":368,"title":{},"body":{"modules/LoggingViewerModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":42,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["ngoninit",{"_index":43,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["npm",{"_index":460,"title":{},"body":{"index.html":{}}}],["object",{"_index":358,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["older",{"_index":431,"title":{},"body":{"index.html":{}}}],["onclose",{"_index":282,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["one",{"_index":466,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["onlevelchanged",{"_index":249,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["onsearchchanged",{"_index":385,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["open",{"_index":492,"title":{},"body":{"index.html":{}}}],["opened",{"_index":299,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["openmodal",{"_index":474,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["otherwise",{"_index":294,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["overview",{"_index":500,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":420,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":19,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["pages",{"_index":467,"title":{},"body":{"index.html":{}}}],["param",{"_index":162,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["parameter",{"_index":489,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["pass",{"_index":494,"title":{},"body":{"index.html":{}}}],["peer",{"_index":422,"title":{},"body":{"dependencies.html":{}}}],["placeholder",{"_index":386,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["placeholder=\"search\">&lt;/ionic",{"_index":394,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["platform",{"_index":284,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["platform.is(\"android",{"_index":344,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["prepare",{"_index":345,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["private",{"_index":128,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["production",{"_index":448,"title":{},"body":{"index.html":{}}}],["promise",{"_index":309,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["property",{"_index":110,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["providers",{"_index":366,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["provides",{"_index":449,"title":{},"body":{"index.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["purposes",{"_index":100,"title":{},"body":{"components/LoggingViewerComponent.html":{},"index.html":{}}}],["read",{"_index":111,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["reading",{"_index":108,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["recommended",{"_index":469,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":147,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["regexp(this.loggingviewerfilterservice.search",{"_index":168,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["result",{"_index":205,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":207,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":159,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerModalComponent.html":{}}}],["returning",{"_index":290,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["rxjs",{"_index":120,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["same",{"_index":430,"title":{},"body":{"index.html":{}}}],["sample",{"_index":457,"title":{},"body":{"index.html":{}}}],["saveimport",{"_index":462,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":458,"title":{},"body":{"index.html":{}}}],["search",{"_index":90,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["search(value",{"_index":240,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["search.component",{"_index":377,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["search.component.html",{"_index":384,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.scss",{"_index":383,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts",{"_index":381,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:27",{"_index":388,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:32",{"_index":393,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:35",{"_index":387,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:56",{"_index":391,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:77",{"_index":390,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:89",{"_index":392,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search/logging",{"_index":376,"title":{},"body":{"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["searched",{"_index":93,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["searchplaceholder",{"_index":348,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["searchvalue",{"_index":167,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["see",{"_index":498,"title":{},"body":{"index.html":{}}}],["select",{"_index":490,"title":{},"body":{"index.html":{}}}],["selected",{"_index":261,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["selectedlevel",{"_index":248,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["separated",{"_index":63,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["service",{"_index":122,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["service/typedoc/index.html",{"_index":141,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["set",{"_index":65,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerModalComponent.html":{}}}],["setlevel(value",{"_index":224,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["sets",{"_index":226,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["setsearch(value",{"_index":231,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["settings",{"_index":212,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["shown",{"_index":314,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["slog",{"_index":228,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["small",{"_index":442,"title":{},"body":{"index.html":{}}}],["someone",{"_index":267,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["specified",{"_index":321,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["src/lib/logging",{"_index":10,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["started",{"_index":427,"title":{"index.html":{}},"body":{}}],["statements",{"_index":412,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":330,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["storage",{"_index":113,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["storing",{"_index":211,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["string",{"_index":60,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["subscribe",{"_index":144,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["subscription",{"_index":119,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["successful",{"_index":87,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["suchen",{"_index":352,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["support",{"_index":480,"title":{},"body":{"index.html":{}}}],["supported",{"_index":303,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["table",{"_index":419,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":418,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["test",{"_index":99,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["testing",{"_index":447,"title":{},"body":{"index.html":{}}}],["text",{"_index":404,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["texts",{"_index":486,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":487,"title":{},"body":{"index.html":{}}}],["this.filterchanged",{"_index":237,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.filterchanged.emit",{"_index":239,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.filterchangedsubscription",{"_index":153,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.filterchangedsubscription.unsubscribe",{"_index":156,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.filterlogmessages",{"_index":143,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.filterlogmessagesbylevel(message",{"_index":160,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.filterlogmessagesbysearch(message",{"_index":161,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.isandroid",{"_index":343,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.language",{"_index":338,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.levelvalue",{"_index":234,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.loadlogmessages",{"_index":142,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.localstoragekeys",{"_index":173,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["this.localstoragekeys.split",{"_index":176,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logger",{"_index":132,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.logger.entry(methodname",{"_index":137,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.logger.exit(methodname",{"_index":138,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.loggingservice.getlogmessages",{"_index":182,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.loggingservice.logmessageschanged.subscribe(async",{"_index":150,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.loggingviewerfilterservice.filterchanged.subscribe",{"_index":154,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.loggingviewerfilterservice.level",{"_index":164,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{}}}],["this.loggingviewerfilterservice.search",{"_index":398,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["this.loglevels",{"_index":264,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["this.loglevels.push",{"_index":265,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["this.logmessages",{"_index":174,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessages.concat(this.loggingservice.getlogmessagesfromlocalstorage(localstoragekey",{"_index":177,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessages.filter((message",{"_index":158,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessages.sort((a",{"_index":178,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessageschangedsubscription",{"_index":149,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessageschangedsubscription.unsubscribe",{"_index":155,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessagesfordisplay",{"_index":157,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.modalcontroller.create",{"_index":477,"title":{},"body":{"index.html":{}}}],["this.modalcontroller.dismiss",{"_index":354,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.placeholder",{"_index":396,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["this.search",{"_index":397,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["this.searchvalue",{"_index":236,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.selectedlanguage",{"_index":476,"title":{},"body":{"index.html":{}}}],["this.selectedlevel",{"_index":266,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["this.translation",{"_index":340,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations",{"_index":346,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations[loggingviewermodalcomponent.languagede",{"_index":350,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations[loggingviewermodalcomponent.languageen",{"_index":347,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations[this.language",{"_index":357,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["title",{"_index":349,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["toolbar",{"_index":472,"title":{},"body":{"index.html":{}}}],["translatable",{"_index":485,"title":{},"body":{"index.html":{}}}],["translation",{"_index":278,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["translation.model",{"_index":326,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["translation.model.ts",{"_index":401,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["translations",{"_index":304,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["triggered",{"_index":220,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["true",{"_index":86,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["tslint:disable",{"_index":333,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["two",{"_index":450,"title":{},"body":{"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["typeof",{"_index":355,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ui",{"_index":255,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["undefined",{"_index":356,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["unit",{"_index":98,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["up",{"_index":104,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["usage",{"_index":459,"title":{},"body":{"index.html":{}}}],["use",{"_index":433,"title":{},"body":{"index.html":{}}}],["used",{"_index":257,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["using",{"_index":20,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["valid",{"_index":292,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["value",{"_index":91,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["values",{"_index":403,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["var",{"_index":194,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["version",{"_index":429,"title":{},"body":{"index.html":{}}}],["versions",{"_index":432,"title":{},"body":{"index.html":{}}}],["viewcontroller",{"_index":323,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["viewer",{"_index":28,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["viewer'},{'name",{"_index":197,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["viewer.component",{"_index":374,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["viewer.component.html",{"_index":32,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.scss",{"_index":30,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts",{"_index":12,"title":{},"body":{"components/LoggingViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:108",{"_index":78,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:124",{"_index":89,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:135",{"_index":96,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:26",{"_index":61,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:31",{"_index":114,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:36",{"_index":51,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:59",{"_index":105,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:83",{"_index":102,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:96",{"_index":70,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.module.ts",{"_index":364,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["viewer/logging",{"_index":11,"title":{},"body":{"components/LoggingViewerComponent.html":{},"modules/LoggingViewerModule.html":{},"coverage.html":{}}}],["viewer>&lt;/ionic",{"_index":125,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["want",{"_index":465,"title":{},"body":{"index.html":{}}}],["warn",{"_index":258,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["web",{"_index":18,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["windows",{"_index":407,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["written",{"_index":444,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/LoggingViewerComponent.html":{"url":"components/LoggingViewerComponent.html","title":"component - LoggingViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer/logging-viewer.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the current logs.\nThe component can be embedded in any web page using:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer\n            \n\n            \n                styleUrls\n                ./logging-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logMessagesForDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterLogMessages\n                            \n                            \n                                    Public\n                                filterLogMessagesByLevel\n                            \n                            \n                                    Public\n                                filterLogMessagesBySearch\n                            \n                            \n                                    Public\n                                loadLogMessages\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                localStorageKeys\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, loggingViewerFilterService: LoggingViewerFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer/logging-viewer.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingViewerFilterService\n                                                  \n                                                        \n                                                                        LoggingViewerFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        localStorageKeys\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:26\n                            \n                        \n                \n                    \n                        Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterLogMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterLogMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:96\n                \n            \n\n\n            \n                \n                    Filter the log messages.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterLogMessagesByLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterLogMessagesByLevel(message: LogMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:108\n                \n            \n\n\n            \n                \n                    Check if the log message's level fulfills the level condition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            LogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the log message to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if check was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterLogMessagesBySearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterLogMessagesBySearch(message: LogMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:124\n                \n            \n\n\n            \n                \n                    Check if the log message fulfills the search condition.\nThe search value gets searched in:\n\nlogger name\nmethod name\nmessage\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            LogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the log message to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if check was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadLogMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLogMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:135\n                \n            \n\n\n            \n                \n                    Load the current log messages.\nFor unit test purposes mainly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:83\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:59\n                \n            \n\n\n            \n                \n                    Initialize the component.\nThis is done by reading the filter data from LoggingViewerFilterService\nand the log messages from LoggingService.\nIf the localStorageKeys property is set, the messages are read from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logMessagesForDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LogMessage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:31\n                            \n                        \n\n                \n                    \n                        Log messages which fulfill the filter condition.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, Input } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { Logger, LoggingService, LogLevelConverter, LogMessage } from \"ionic-logging-service\";\n\nimport { LoggingViewerFilterService } from \"../logging-viewer-filter.service\";\n\n/**\n * Component for displaying the current logs.\n *\n * The component can be embedded in any web page using:\n *\n * &lt;ionic-logging-viewer>&lt;/ionic-logging-viewer>\n */\n@Component({\n\tselector: \"ionic-logging-viewer\",\n\ttemplateUrl: \"./logging-viewer.component.html\",\n\tstyleUrls: [\"./logging-viewer.component.scss\"]\n})\nexport class LoggingViewerComponent implements OnInit, OnDestroy {\n\n\t/**\n\t * Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\t */\n\t@Input()\n\tpublic localStorageKeys: string;\n\n\t/**\n\t * Log messages which fulfill the filter condition.\n\t */\n\tpublic logMessagesForDisplay: LogMessage[];\n\n\tprivate logger: Logger;\n\tprivate logMessages: LogMessage[];\n\tprivate logMessagesChangedSubscription: Subscription;\n\tprivate filterChangedSubscription: Subscription;\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tprivate loggingService: LoggingService,\n\t\tprivate loggingViewerFilterService: LoggingViewerFilterService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initialize the component.\n\t *\n\t * This is done by reading the filter data from [LoggingViewerFilterService](LoggingViewerFilterService.html)\n\t * and the log messages from [LoggingService](../../../ionic-logging-service/typedoc/index.html).\n\t * If the localStorageKeys property is set, the messages are read from local storage.\n\t */\n\tpublic ngOnInit(): void {\n\t\tconst methodName = \"ngOnInit\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.loadLogMessages();\n\t\tthis.filterLogMessages();\n\n\t\t// subscribe to loggingService.logMessagesChanged event, to refresh, when new message is logged\n\t\tthis.logMessagesChangedSubscription = this.loggingService.logMessagesChanged.subscribe(async () => {\n\t\t\tthis.loadLogMessages();\n\t\t\tthis.filterLogMessages();\n\t\t});\n\n\t\t// subscribe to loggingViewerFilterService.filterChanged event, to refresh, when filter is modified\n\t\tthis.filterChangedSubscription = this.loggingViewerFilterService.filterChanged.subscribe(() => {\n\t\t\tthis.filterLogMessages();\n\t\t});\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tconst methodName = \"ngOnDestroy\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logMessagesChangedSubscription.unsubscribe();\n\t\tthis.filterChangedSubscription.unsubscribe();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Filter the log messages.\n\t */\n\tpublic filterLogMessages(): void {\n\t\tthis.logMessagesForDisplay = this.logMessages.filter((message) => {\n\t\t\treturn this.filterLogMessagesByLevel(message) && this.filterLogMessagesBySearch(message);\n\t\t});\n\t}\n\n\t/**\n\t * Check if the log message's level fulfills the level condition.\n\t *\n\t * @param message the log message to check\n\t * @returns true if check was successful\n\t */\n\tpublic filterLogMessagesByLevel(message: LogMessage): boolean {\n\t\tconst levelValue = this.loggingViewerFilterService.level;\n\t\treturn LogLevelConverter.levelFromString(message.level) >= LogLevelConverter.levelFromString(levelValue);\n\t}\n\n\t/**\n\t * Check if the log message fulfills the search condition.\n\t *\n\t * The search value gets searched in:\n\t * - logger name\n\t * - method name\n\t * - message\n\t *\n\t * @param message the log message to check\n\t * @returns true if check was successful\n\t */\n\tpublic filterLogMessagesBySearch(message: LogMessage): boolean {\n\t\tconst searchValue = new RegExp(this.loggingViewerFilterService.search, \"i\");\n\t\treturn message.logger.search(searchValue) >= 0 ||\n\t\t\tmessage.methodName.search(searchValue) >= 0 ||\n\t\t\tmessage.message.join(\"|\").search(searchValue) >= 0;\n\t}\n\n\t/**\n\t * Load the current log messages.\n\t * For unit test purposes mainly.\n\t */\n\tpublic loadLogMessages(): void {\n\t\tif (this.localStorageKeys) {\n\t\t\tthis.logMessages = [];\n\t\t\tfor (const localStorageKey of this.localStorageKeys.split(\",\")) {\n\t\t\t\tthis.logMessages = this.logMessages.concat(this.loggingService.getLogMessagesFromLocalStorage(localStorageKey));\n\t\t\t}\n\t\t\tthis.logMessages = this.logMessages.sort((a, b) => a.timeStamp.getTime() - b.timeStamp.getTime());\n\t\t} else {\n\t\t\tthis.logMessages = this.loggingService.getLogMessages();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t{{ logMessage.timeStamp | date:'dd.MM.yyyy HH:mm:ss' }} {{ logMessage.level }}\n\t\t\t{{ logMessage.logger }}\n\t\t\t\n\t\t\t\t{{ logMessage.methodName }}\n\t\t\t\t {{ messagePart }} \n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./logging-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t{{ logMessage.timeStamp | date:\\'dd.MM.yyyy HH:mm:ss\\' }} {{ logMessage.level }}\t\t\t{{ logMessage.logger }}\t\t\t\t\t\t\t{{ logMessage.methodName }}\t\t\t\t {{ messagePart }} \t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingViewerFilterService.html":{"url":"injectables/LoggingViewerFilterService.html","title":"injectable - LoggingViewerFilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingViewerFilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logging-viewer-filter.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for storing filter settings for logging viewer.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    level\n                                \n                                \n                                    search\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-filter.service.ts:18\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                needed for internal logging.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-filter.service.ts:14\n                            \n                        \n\n                \n                    \n                        Event triggered when the filter was changed.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:42\n                                \n                            \n                    \n                        \n                                Gets the current log level.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlevel(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:50\n                                \n                            \n                    \n                        \n                                Sets the new log level and emits a filterChanged event.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    new slog level\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n\n                \n                    \n                        getsearch()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:59\n                                \n                            \n                    \n                        \n                                Gets the current search value.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setsearch(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:67\n                                \n                            \n                    \n                        \n                                Sets the new search value and emits a filterChanged event.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    new search value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from \"@angular/core\";\n\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\n/**\n * Service for storing filter settings for logging viewer.\n */\n@Injectable()\nexport class LoggingViewerFilterService {\n\n\t/**\n\t * Event triggered when the filter was changed.\n\t */\n\tpublic filterChanged: EventEmitter;\n\n\tprivate logger: Logger;\n\tprivate levelValue: string;\n\tprivate searchValue: string;\n\n\t/**\n\t * Creates a new instance of the service.\n\t * @param loggingService needed for internal logging.\n\t */\n\tconstructor(\n\t\tloggingService: LoggingService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Filter.Service\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.levelValue = \"DEBUG\";\n\t\tthis.searchValue = \"\";\n\t\tthis.filterChanged = new EventEmitter();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Gets the current log level.\n\t * @return log level\n\t */\n\tpublic get level(): string {\n\t\treturn this.levelValue;\n\t}\n\n\t/**\n\t * Sets the new log level and emits a filterChanged event.\n\t * @param value new slog level\n\t */\n\tpublic set level(value: string) {\n\t\tthis.levelValue = value;\n\t\tthis.filterChanged.emit();\n\t}\n\n\t/**\n\t * Gets the current search value.\n\t * @return search value\n\t */\n\tpublic get search(): string {\n\t\treturn this.searchValue;\n\t}\n\n\t/**\n\t * Sets the new search value and emits a filterChanged event.\n\t * @param value new search value\n\t */\n\tpublic set search(value: string) {\n\t\tthis.searchValue = value;\n\t\tthis.filterChanged.emit();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingViewerLevelsComponent.html":{"url":"components/LoggingViewerLevelsComponent.html","title":"component - LoggingViewerLevelsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerLevelsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer-levels/logging-viewer-levels.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the log levels for filtering the current logs.\nThe component can be embedded in any web page using:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer-levels\n            \n\n            \n                styleUrls\n                ./logging-viewer-levels.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer-levels.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logLevels\n                            \n                            \n                                    Public\n                                selectedLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLevelChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, loggingViewerFilterService: LoggingViewerFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingViewerFilterService\n                                                  \n                                                        \n                                                                        LoggingViewerFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:80\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:62\n                \n            \n\n\n            \n                \n                    Initialize the component.\nThis is done by reading the filter data from LoggingViewerFilterService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLevelChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLevelChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:92\n                \n            \n\n\n            \n                \n                    Callback when the level was changed in the UI.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logLevels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:25\n                            \n                        \n\n                \n                    \n                        Log levels used for filtering: DEBUG, INFO, WARN, ERROR\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:30\n                            \n                        \n\n                \n                    \n                        Selected level.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\nimport { LoggingViewerFilterService } from \"../logging-viewer-filter.service\";\n\n/**\n * Component for displaying the log levels for filtering the current logs.\n *\n * The component can be embedded in any web page using:\n *\n * &lt;ionic-logging-viewer-levels>&lt;/ionic-logging-viewer-levels>\n */\n@Component({\n\tselector: \"ionic-logging-viewer-levels\",\n\ttemplateUrl: \"./logging-viewer-levels.component.html\",\n\tstyleUrls: [\"./logging-viewer-levels.component.scss\"]\n})\nexport class LoggingViewerLevelsComponent implements OnInit, OnDestroy {\n\n\t/**\n\t * Log levels used for filtering: DEBUG, INFO, WARN, ERROR\n\t */\n\tpublic logLevels: string[];\n\n\t/**\n\t * Selected level.\n\t */\n\tpublic selectedLevel: string;\n\n\tprivate logger: Logger;\n\tprivate filterChangedSubscription: Subscription;\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tloggingService: LoggingService,\n\t\tprivate loggingViewerFilterService: LoggingViewerFilterService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Levels.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logLevels = [];\n\t\tthis.logLevels.push(\n\t\t\t\"DEBUG\",\n\t\t\t\"INFO\",\n\t\t\t\"WARN\",\n\t\t\t\"ERROR\",\n\t\t);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initialize the component.\n\t *\n\t * This is done by reading the filter data from [LoggingViewerFilterService](LoggingViewerFilterService.html).\n\t */\n\tpublic ngOnInit(): void {\n\t\tconst methodName = \"ngOnInit\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.selectedLevel = this.loggingViewerFilterService.level;\n\n\t\t// subscribe to loggingViewerFilterService.filterChanged event, to refresh,\n\t\t// when someone else modifies the level\n\t\tthis.filterChangedSubscription = this.loggingViewerFilterService.filterChanged.subscribe(() => {\n\t\t\tthis.selectedLevel = this.loggingViewerFilterService.level;\n\t\t});\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tconst methodName = \"ngOnDestroy\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.filterChangedSubscription.unsubscribe();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Callback when the level was changed in the UI.\n\t */\n\tpublic onLevelChanged(): void {\n\t\tconst methodName = \"onLevelChanged\";\n\t\tthis.logger.entry(methodName, this.selectedLevel);\n\n\t\tthis.loggingViewerFilterService.level = this.selectedLevel;\n\n\t\tthis.logger.exit(methodName);\n\t}\n}\n\n    \n\n    \n        \n\t{{ logLevel }}\n\n    \n\n    \n                \n                    ./logging-viewer-levels.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t{{ logLevel }}'\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerLevelsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingViewerModalComponent.html":{"url":"components/LoggingViewerModalComponent.html","title":"component - LoggingViewerModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer-modal/logging-viewer-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Ionic modal containing LoggingViewerComponent,\nLoggingViewerLevelsComponent and\nLoggingViewerSearchComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer-modal\n            \n\n            \n                styleUrls\n                ./logging-viewer-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAndroid\n                            \n                            \n                                    Public\n                                language\n                            \n                            \n                                    Public\n                                localStorageKeys\n                            \n                            \n                                    Public\n                                translation\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslation\n                            \n                            \n                                    Public\n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                    Async\n                                onClose\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, modalController: ModalController, navParams: NavParams, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:51\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        navParams\n                                                  \n                                                        \n                                                                    NavParams\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTranslation()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:121\n                \n            \n\n\n            \n                \n                    Helper method returning the current translation:\n\nthe property translation if defined\nthe translation according property language if valid\nEnglish translation, otherwise\n\n\n\n                    \n                        Returns :         LoggingViewerTranslation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:96\n                \n            \n\n\n            \n                \n                    Eventhandler called by Ionic when the modal is opened.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:78\n                \n            \n\n\n            \n                \n                    Initializes the LoggingViewerModalComponent.\nIt configures the supported translations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:106\n                \n            \n\n\n            \n                \n                    Eventhandler called when the cancel button is clicked.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAndroid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:45\n                            \n                        \n\n                \n                    \n                        Flag controlling which close button will be shown.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            language\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:29\n                            \n                        \n\n                \n                    \n                        Language to be used for the modal.\nCurrently supported: en, de\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            localStorageKeys\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:40\n                            \n                        \n\n                \n                    \n                        Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            translation\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         LoggingViewerTranslation\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:35\n                            \n                        \n\n                \n                    \n                        Translation to be used for the modal.\nIf specified, the language is ignored.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from \"@angular/core\";\n\n// import { ViewController } from \"@ionic/core\";\nimport { NavParams, ModalController, Platform } from \"@ionic/angular\";\n\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\nimport { LoggingViewerTranslation } from \"../logging-viewer-translation.model\";\n\n/**\n * Ionic modal containing [LoggingViewerComponent](LoggingViewerComponent.html),\n * [LoggingViewerLevelsComponent](LoggingViewerLevelsComponent.html) and\n * [LoggingViewerSearchComponent](LoggingViewerSearchComponent.html).\n */\n@Component({\n\tselector: \"ionic-logging-viewer-modal\",\n\ttemplateUrl: \"./logging-viewer-modal.component.html\",\n\tstyleUrls: [\"./logging-viewer-modal.component.scss\"]\n})\nexport class LoggingViewerModalComponent implements OnInit {\n\n\tprivate static languageEn = \"en\";\n\tprivate static languageDe = \"de\";\n\n\t/**\n\t * Language to be used for the modal.\n\t * Currently supported: en, de\n\t */\n\tpublic language: string;\n\n\t/**\n\t * Translation to be used for the modal.\n\t * If specified, the language is ignored.\n\t */\n\tpublic translation: LoggingViewerTranslation;\n\n\t/**\n\t * Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\t */\n\tpublic localStorageKeys: string;\n\n\t/**\n\t * Flag controlling which close button will be shown.\n\t */\n\tpublic isAndroid: boolean;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate logger: Logger;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate translations: { [language: string]: LoggingViewerTranslation; };\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tplatform: Platform,\n\t\tprivate modalController: ModalController,\n\t\tnavParams: NavParams,\n\t\tloggingService: LoggingService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Modal.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.language = navParams.get(\"language\");\n\t\tthis.translation = navParams.get(\"translation\");\n\t\tthis.localStorageKeys = navParams.get(\"localSTorageKeys\");\n\t\tthis.isAndroid = platform.is(\"android\");\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initializes the LoggingViewerModalComponent.\n\t * It configures the supported translations.\n\t */\n\tpublic ngOnInit(): void {\n\t\t// prepare translations\n\t\tthis.translations = {};\n\t\tthis.translations[LoggingViewerModalComponent.languageEn] = {\n\t\t\tcancel: \"Cancel\",\n\t\t\tsearchPlaceholder: \"Search\",\n\t\t\ttitle: \"Logging\",\n\t\t};\n\t\tthis.translations[LoggingViewerModalComponent.languageDe] = {\n\t\t\tcancel: \"Abbrechen\",\n\t\t\tsearchPlaceholder: \"Suchen\",\n\t\t\ttitle: \"Logging\",\n\t\t};\n\t}\n\n\t/**\n\t * Eventhandler called by Ionic when the modal is opened.\n\t */\n\tpublic ionViewDidEnter(): void {\n\t\tconst methodName = \"ionViewDidEnter\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Eventhandler called when the cancel button is clicked.\n\t */\n\tpublic async onClose(): Promise {\n\t\tconst methodName = \"onClose\";\n\t\tthis.logger.entry(methodName);\n\n\t\tawait this.modalController.dismiss();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Helper method returning the current translation:\n\t * - the property translation if defined\n\t * - the translation according property language if valid\n\t * - English translation, otherwise\n\t */\n\tpublic getTranslation(): LoggingViewerTranslation {\n\t\tif (typeof this.translation !== \"undefined\") {\n\t\t\treturn this.translation;\n\t\t} else if (typeof this.language !== \"undefined\" && typeof this.translations[this.language] === \"object\") {\n\t\t\treturn this.translations[this.language];\n\t\t} else {\n\t\t\treturn this.translations[LoggingViewerModalComponent.languageEn];\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t{{ getTranslation().title }}\n\t\t\n\t\t\t\n\t\t\t\t{{ getTranslation().cancel }}\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\n\t\n\t\t\n\t\n\n\n\t\n\n    \n\n    \n                \n                    ./logging-viewer-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ getTranslation().title }}\t\t\t\t\t\t\t\t\t{{ getTranslation().cancel }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggingViewerModule.html":{"url":"modules/LoggingViewerModule.html","title":"module - LoggingViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggingViewerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/logging-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoggingViewerComponent\n                        \n                        \n                            LoggingViewerLevelsComponent\n                        \n                        \n                            LoggingViewerModalComponent\n                        \n                        \n                            LoggingViewerSearchComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoggingViewerFilterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggingViewerComponent\n                        \n                        \n                            LoggingViewerLevelsComponent\n                        \n                        \n                            LoggingViewerModalComponent\n                        \n                        \n                            LoggingViewerSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { LoggingViewerComponent } from \"./logging-viewer/logging-viewer.component\";\nimport { LoggingViewerFilterService } from \"./logging-viewer-filter.service\";\nimport { LoggingViewerLevelsComponent } from \"./logging-viewer-levels/logging-viewer-levels.component\";\nimport { LoggingViewerSearchComponent } from \"./logging-viewer-search/logging-viewer-search.component\";\nimport { LoggingViewerModalComponent } from \"./logging-viewer-modal/logging-viewer-modal.component\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule\n\t],\n\tdeclarations: [\n\t\tLoggingViewerComponent,\n\t\tLoggingViewerSearchComponent,\n\t\tLoggingViewerLevelsComponent,\n\t\tLoggingViewerModalComponent\n\t],\n\tentryComponents: [\n\t],\n\texports: [\n\t\tLoggingViewerComponent,\n\t\tLoggingViewerSearchComponent,\n\t\tLoggingViewerLevelsComponent,\n\t\tLoggingViewerModalComponent\n\t],\n\tproviders: [\n\t\tLoggingViewerFilterService\n\t]\n})\nexport class LoggingViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingViewerSearchComponent.html":{"url":"components/LoggingViewerSearchComponent.html","title":"component - LoggingViewerSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer-search/logging-viewer-search.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the search bar for filtering the current logs.\nThe component can be embedded in any web page using:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer-search\n            \n\n            \n                styleUrls\n                ./logging-viewer-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSearchChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, loggingViewerFilterService: LoggingViewerFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:35\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingViewerFilterService\n                                                  \n                                                        \n                                                                        LoggingViewerFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:27\n                            \n                        \n                \n                    \n                        Placeholder to be shown in the empty search bar.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:77\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:56\n                \n            \n\n\n            \n                \n                    Initialize the component.\nThis is done by reading the filter data from LoggingViewerFilterService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSearchChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSearchChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:89\n                \n            \n\n\n            \n                \n                    Callback when the search value was changed in the UI.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:32\n                            \n                        \n\n                \n                    \n                        Current search value.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\n\nimport { Subscription } from \"rxjs\";\n\nimport { LoggingService, Logger } from \"ionic-logging-service\";\n\nimport { LoggingViewerFilterService } from \"../logging-viewer-filter.service\";\n\n/**\n * Component for displaying the search bar for filtering the current logs.\n *\n * The component can be embedded in any web page using:\n *\n * &lt;ionic-logging-viewer-search placeholder=\"Search\">&lt;/ionic-logging-viewer-search>\n */\n@Component({\n\tselector: \"ionic-logging-viewer-search\",\n\ttemplateUrl: \"./logging-viewer-search.component.html\",\n\tstyleUrls: [\"./logging-viewer-search.component.scss\"]\n})\nexport class LoggingViewerSearchComponent implements OnInit, OnDestroy {\n\n\t/**\n\t * Placeholder to be shown in the empty search bar.\n\t */\n\t@Input()\n\tpublic placeholder: string;\n\n\t/**\n\t * Current search value.\n\t */\n\tpublic search: string;\n\n\tprivate logger: Logger;\n\tprivate filterChangedSubscription: Subscription;\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tloggingService: LoggingService,\n\t\tprivate loggingViewerFilterService: LoggingViewerFilterService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Search.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initialize the component.\n\t *\n\t * This is done by reading the filter data from [LoggingViewerFilterService](LoggingViewerFilterService.html).\n\t */\n\tpublic ngOnInit(): void {\n\t\tconst methodName = \"ngOnInit\";\n\t\tthis.logger.entry(methodName);\n\n\t\tif (!this.placeholder) {\n\t\t\tthis.placeholder = \"Search\";\n\t\t}\n\t\tthis.search = this.loggingViewerFilterService.search;\n\n\t\t// subscribe to loggingViewerFilterService.filterChanged event, to refresh,\n\t\t// when someone else modifies the search value\n\t\tthis.filterChangedSubscription = this.loggingViewerFilterService.filterChanged.subscribe(() => {\n\t\t\tthis.search = this.loggingViewerFilterService.search;\n\t\t});\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tconst methodName = \"ngOnDestroy\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.filterChangedSubscription.unsubscribe();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Callback when the search value was changed in the UI.\n\t */\n\tpublic onSearchChanged(): void {\n\t\tconst methodName = \"onSearchChanged\";\n\t\tthis.logger.entry(methodName, this.search);\n\n\t\tthis.loggingViewerFilterService.search = this.search;\n\n\t\tthis.logger.exit(methodName);\n\t}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./logging-viewer-search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggingViewerTranslation.html":{"url":"interfaces/LoggingViewerTranslation.html","title":"interface - LoggingViewerTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggingViewerTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logging-viewer-translation.model.ts\n        \n\n            \n                Description\n            \n            \n                Describes all values needed in a translation for\nLoggingViewerModalComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cancel\n                                \n                                \n                                        searchPlaceholder\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancel\n                                    \n                                \n                                \n                                    \n                                        cancel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cancel button.\nThis text is shown only on iOS.\nOn Android or Windows, just an close-icon is used.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchPlaceholder\n                                    \n                                \n                                \n                                    \n                                        searchPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Placeholder for search bar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the modal.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoggingViewerTranslation {\n\t/**\n\t * Title of the modal.\n\t */\n\ttitle: string;\n\n\t/**\n\t * Cancel button.\n\t * This text is shown only on iOS.\n\t * On Android or Windows, just an close-icon is used.\n\t */\n\tcancel: string;\n\n\t/**\n\t * Placeholder for search bar.\n\t */\n\tsearchPlaceholder: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/logging-viewer-filter.service.ts\n            \n            injectable\n            LoggingViewerFilterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-levels/logging-viewer-levels.component.ts\n            \n            component\n            LoggingViewerLevelsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-modal/logging-viewer-modal.component.ts\n            \n            component\n            LoggingViewerModalComponent\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-search/logging-viewer-search.component.ts\n            \n            component\n            LoggingViewerSearchComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-translation.model.ts\n            \n            interface\n            LoggingViewerTranslation\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer/logging-viewer.component.ts\n            \n            component\n            LoggingViewerComponent\n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^9.0.0\n        \n            @angular/core : ^9.0.0\n        \n            @ionic/angular : ^5.0.0\n        \n            ionic-logging-service : ^9.0.0\n        \n            ionicons : ^5.0.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nionic-logging-viewer\nThe dependencies used by the latest version are the same as needed for Ionic 5.0.0. For older versions use:\n\n\n\nionic-logging-viewer\nIonic\nAngular\n\n\n\n\n9.0.0\n>= 5.0.0\n^9.0.0\n\n\n8.0.0\n>= 4.7.0\n^8.0.0\n\n\n2.0.0\n>= 4.0.0\n^7.0.0\n\n\n1.0.1\n>= 3.9.0\n^5.0.0\n\n\n\nThe logging viewer is a small component which can be used in your Ionic app\nfor displaying the current logs, written by ionic-logging-service.\nThe viewer is meant for development and testing purposes, not for production.\nIt provides two components:\n\nLoggingViewerComponent:  \ncan be embedded in any web page using the directive\nLoggingViewerModalComponent:  \na complete implemented modal containing the LoggingViewerComponent\n\nAdditionally, there are two components for filtering the data:\n\nLoggingViewerLevelsComponent:\nallows filtering by log level\nLoggingViewerSearchComponent:\nallows filtering by an arbitrary expression\n\nA sample app using these components is ionic-logging-viewer-app.\nScreenshots\n\nUsage\nnpm package\nnpm install ionic-logging-viewer --saveimport module\nImport the LoggingViewerModule in to your app.module.ts:\nimport { LoggingViewerModule } from \"ionic-logging-viewer\";\n...\n@NgModule({\n  imports: [\n    IonicModule.forRoot(AppComponent),\n    LoggingViewerModule\n  ],\n  ...\n})LoggingViewerComponent directive\nIf you want to use the directive in one of your pages, just add\nLoggingViewerLevelsComponent and LoggingViewerSearchComponent directives\nFor filtering the log messages, you can add also these directives to your page.\nIt is recommended to include them in ion-toolbar, but it is not necessary:\n\n  \n\n\n  \nLoggingViewerModalComponent modal\npublic async openModal(): Promise {\n  let componentProps = { language: this.selectedLanguage };\n  const modal = await this.modalController.create({\n    component: LoggingViewerModalComponent,\n    componentProps: componentProps\n  });\n  await modal.present();\n}multi language support\nThe LoggingViewerComponent does not need multi language support, since it just\ndisplays the logged data. The same applies to LoggingViewerLevelsComponent\nand LoggingViewerSearchComponent.\nBut for the LoggingViewerModalComponent, multi language support is needed,\nsince the modal contains some translatable texts. Therefore,\nloggingViewerModalManager.openModal() has a language parameter, which you can\nuse to select the language. Currently en and de are supported.\nIf you need another language, either open an issue, or just use the translation parameter.\nThis parameter you can use to pass your completely own texts.\nJust fill the LoggingViewerTranslation object.\nAPI\nsee API documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LoggingViewerModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
