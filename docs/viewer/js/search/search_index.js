var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/components/LoggingViewerComponent.html",[0,0.296,1,0.514]],["body/components/LoggingViewerComponent.html",[0,0.504,1,0.643,2,0.699,3,0.287,4,0.287,5,0.653,6,0.653,7,0.653,8,0.653,9,0.223,10,0.665,11,2.378,12,0.99,13,0.707,14,1.035,15,0.989,16,0.989,17,1.035,18,1.035,19,1.035,20,1.035,21,1.035,22,1.286,23,1.57,24,0.653,25,1.697,26,0.978,27,0.725,28,0.451,29,1.035,30,2.53,31,1.035,32,2.036,33,0.287,34,0.569,35,1.496,36,2.53,37,1.035,38,2.879,39,2.036,40,2.036,41,2.879,42,1.948,43,1.595,44,1.264,45,2.173,46,0.852,47,0.653,48,1.464,49,1.015,50,1.564,51,1.284,52,0.852,53,0.989,54,0.852,55,1.058,56,0.079,57,1.564,58,0.701,59,0.869,60,0.569,61,1.284,62,1.264,63,1.264,64,1.264,65,1.463,66,1.264,67,1.264,68,1.264,69,1.264,70,1.284,71,1.779,72,1.435,73,1.947,74,1.519,75,1.519,76,2.036,77,3.831,78,1.284,79,3.977,80,2.036,81,1.463,82,2.879,83,3.34,84,4.036,85,1.787,86,2.879,87,2.879,88,2.036,89,1.284,90,1.078,91,1.264,92,1.57,93,2.036,94,1.313,95,1.57,96,1.284,97,2.036,98,2.036,99,2.036,100,1.57,101,2.036,102,1.284,103,1.264,104,1.264,105,1.284,106,1.264,107,1.264,108,1.264,109,1.035,110,1.57,111,2.036,112,2.036,113,2.036,114,1.284,115,2.036,116,0.643,117,1.264,118,0.359,119,1.57,120,0.797,121,1.284,122,0.359,123,0.653,124,0.797,125,1.284,126,0.287,127,0.441,128,1.397,129,1.284,130,1.284,131,0.797,132,0.537,133,1.284,134,1.147,135,1.058,136,0.537,137,1.058,138,1.058,139,0.797,140,1.284,141,1.284,142,2.036,143,2.53,144,1.264,145,1.284,146,1.035,147,1.264,148,0.99,149,1.284,150,1.284,151,0.797,152,1.284,153,0.797,154,0.797,155,1.284,156,0.797,157,1.284,158,1.284,159,1.57,160,1.284,161,1.284,162,1.57,163,0.99,164,0.99,165,1.284,166,1.284,167,0.99,168,1.284,169,1.284,170,2.53,171,1.284,172,1.284,173,0.99,174,2.879,175,0.99,176,0.99,177,1.284,178,1.284,179,1.284,180,1.284,181,1.284,182,1.284,183,2.036,184,1.284,185,2.036,186,2.036,187,2.036,188,2.036,189,2.036,190,0.653,191,1.035,192,1.035,193,0.537,194,1.463,195,0.653,196,1.284,197,0.653,198,0.287,199,0.653,200,0.165,201,0.653,202,0.287,203,0.537,204,0.653,205,0.021,206,0.033,207,0.021]],["title/injectables/LoggingViewerFilterService.html",[49,0.643,208,1.169]],["body/injectables/LoggingViewerFilterService.html",[3,0.457,4,0.457,9,0.355,10,0.711,13,1.016,15,1.249,26,0.571,27,0.666,28,0.548,33,0.457,34,0.807,35,1.406,46,1.208,47,1.039,48,1.712,49,0.807,50,1.666,52,1.208,53,1.497,54,1.208,55,1.4,56,0.078,57,1.4,58,0.813,59,1.15,60,1.229,65,1.467,71,1.848,72,1.318,74,1.522,75,1.208,81,2.19,90,1.48,91,2.753,92,2.806,94,1.4,116,0.645,118,0.571,122,1.072,126,0.457,127,0.702,128,1.4,132,0.855,134,0.702,135,0.855,136,0.855,137,0.855,138,0.855,146,2.024,159,2.258,162,2.582,163,1.577,167,1.577,205,0.033,206,0.047,207,0.033,208,1.467,209,2.044,210,1.577,211,2.887,212,2.887,213,4.093,214,2.887,215,2.044,216,1.792,217,2.887,218,3.637,219,2.044,220,2.887,221,1.792,222,2.044,223,2.044,224,2.044,225,2.044,226,3.637,227,3.637,228,2.887,229,2.044,230,2.044,231,2.044,232,2.044,233,2.044,234,3.348,235,1.577,236,3.348,237,2.044,238,2.044,239,2.887,240,2.044]],["title/components/LoggingViewerLevelsComponent.html",[0,0.296,198,0.514]],["body/components/LoggingViewerLevelsComponent.html",[0,0.542,1,0.385,2,0.877,3,0.751,4,0.385,5,0.877,6,0.877,7,0.877,8,0.877,9,0.3,10,0.675,13,0.482,14,1.298,15,0.877,16,0.877,17,1.298,18,1.298,19,1.298,20,1.298,21,1.298,22,1.545,23,1.887,24,0.877,25,1.909,26,1.086,27,0.76,28,0.592,29,1.298,31,1.298,33,0.385,34,0.714,35,1.503,37,1.298,42,2.227,43,1.823,46,1.068,47,0.877,48,1.571,49,1.115,50,1.571,52,1.068,53,0.877,54,1.068,55,0.722,56,0.078,57,1.272,58,0.679,59,0.593,60,0.939,71,1.298,72,1.155,74,1.272,75,1.571,81,1.823,90,0.593,94,1.272,103,1.585,104,1.585,106,1.585,107,1.585,108,1.585,109,1.298,116,0.751,118,0.482,119,1.585,120,1.071,122,0.482,123,0.877,124,1.071,126,0.385,127,0.593,128,1.272,131,1.071,132,0.722,134,1.155,135,1.406,136,0.722,137,1.406,138,1.406,139,1.071,144,1.071,146,0.877,147,1.071,151,1.071,153,1.071,154,1.071,156,1.071,164,2.345,190,0.877,191,1.298,192,1.298,193,0.722,194,1.708,195,0.877,197,0.877,198,0.751,199,0.877,200,0.222,201,0.877,202,0.385,203,0.722,204,0.877,205,0.028,206,0.042,207,0.028,221,1.585,235,2.345,241,2.413,242,1.331,243,3.888,244,2.086,245,3.041,246,2.554,247,3.041,248,3.041,249,3.588,250,1.725,251,1.725,252,1.725,253,1.725,254,1.97,255,1.97,256,1.725,257,1.068,258,3.041,259,3.041,260,1.725,261,2.554,262,1.725,263,1.725,264,1.725,265,1.725,266,3.361,267,1.331,268,1.331,269,2.554]],["title/components/LoggingViewerModalComponent.html",[0,0.296,200,0.296]],["body/components/LoggingViewerModalComponent.html",[0,0.41,1,0.465,2,0.714,3,0.295,4,0.295,5,0.67,6,0.67,7,0.67,8,0.67,9,0.229,10,0.695,13,0.369,15,0.714,16,0.714,21,1.057,22,1.308,24,0.67,25,1.717,26,1.1,27,0.722,28,0.587,29,1.057,31,1.057,33,0.295,34,0.581,35,1.502,37,1.057,43,1.485,44,1.291,45,1.974,46,0.87,48,1.479,50,1.699,52,0.87,53,0.714,54,0.87,55,0.552,56,0.078,57,1.077,58,0.755,59,0.453,60,0.889,62,1.291,63,1.291,64,1.291,65,1.057,66,1.291,67,1.291,68,1.291,69,1.291,72,0.714,73,1.057,74,1.33,75,1.413,85,1.814,90,0.714,94,1.077,95,1.604,110,2.254,116,0.653,117,1.974,118,0.369,122,0.369,126,0.295,127,0.453,128,1.413,132,0.552,134,1.092,135,1.222,136,0.552,137,1.222,138,1.222,159,1.598,173,1.017,175,1.017,176,1.017,190,0.67,191,1.057,192,1.057,193,0.552,194,1.485,195,0.67,197,0.67,198,0.465,199,0.67,200,0.435,201,0.67,202,0.465,203,0.552,204,0.67,205,0.021,206,0.034,207,0.021,257,1.222,270,2.035,271,1.017,272,1.615,273,1.604,274,2.574,275,2.079,276,2.574,277,2.922,278,3.18,279,3.18,280,1.986,281,3.18,282,1.986,283,2.397,284,2.064,285,1.319,286,3.379,287,3.537,288,1.319,289,1.319,290,2.254,291,1.604,292,1.604,293,2.275,294,1.604,295,1.604,296,1.319,297,1.291,298,1.814,299,1.598,300,1.598,301,1.319,302,1.161,303,1.319,304,1.604,305,1.604,306,1.319,307,2.079,308,2.079,309,2.079,310,2.079,311,2.079,312,2.079,313,1.319,314,3.379,315,3.379,316,2.079,317,1.319,318,2.079,319,2.079,320,2.922,321,1.319,322,2.079,323,2.922,324,1.319,325,2.453,326,1.604,327,1.319,328,2.079,329,1.604,330,1.291,331,0.819,332,1.017,333,1.319,334,1.319,335,1.319,336,2.079,337,1.319,338,1.319,339,2.079,340,2.079,341,2.079,342,2.079,343,1.319,344,1.319,345,1.319,346,1.319,347,1.319,348,2.079,349,1.604,350,1.604,351,1.319,352,1.319,353,1.319,354,1.017,355,1.319,356,1.319,357,1.319,358,2.574,359,2.079,360,2.079,361,1.319,362,2.079,363,1.017,364,2.079,365,2.079]],["title/interfaces/LoggingViewerModalProperties.html",[366,0.962,367,1.169]],["body/interfaces/LoggingViewerModalProperties.html",[3,0.586,4,0.586,9,0.456,10,0.456,13,0.733,16,1.175,27,0.456,28,0.49,33,0.586,34,1.127,45,2.663,56,0.078,58,0.901,59,1.522,60,1.199,62,2.123,63,2.123,64,2.123,65,1.738,66,2.123,67,2.123,68,2.123,69,2.123,72,1.175,73,1.738,85,2.363,116,0.586,126,0.586,200,0.338,205,0.043,206,0.056,207,0.043,257,1.687,270,1.333,272,1.75,282,3.111,283,2.75,284,2.18,290,2.639,291,2.639,292,2.639,293,2.123,294,2.639,295,2.639,297,2.123,298,2.123,299,2.123,300,2.123,302,1.386,304,2.639,305,2.639,332,2.024,366,1.098,367,1.738,368,1.629,369,2.024,370,2.639,371,3.421,372,2.624]],["title/modules/LoggingViewerModule.html",[373,1.428,374,1.169]],["body/modules/LoggingViewerModule.html",[1,0.96,3,0.64,4,0.64,9,0.497,10,0.497,11,1.777,27,0.746,28,0.574,49,1.108,56,0.078,116,1.017,118,0.8,123,1.455,126,0.64,127,0.983,198,0.96,200,0.554,202,0.96,205,0.047,206,0.059,207,0.047,241,1.777,270,1.455,331,1.777,374,1.838,375,1.777,376,2.863,377,3.618,378,3.618,379,3.618,380,2.79,381,3.618,382,2.208,383,3.618,384,2.863,385,3.618,386,2.863,387,2.863,388,1.777,389,2.863,390,2.863,391,2.208,392,2.863]],["title/components/LoggingViewerSearchComponent.html",[0,0.296,202,0.514]],["body/components/LoggingViewerSearchComponent.html",[0,0.543,1,0.389,2,0.883,3,0.389,4,0.389,5,0.884,6,0.884,7,0.884,8,0.884,9,0.302,10,0.677,13,0.486,14,1.306,15,1.159,16,0.883,17,1.306,18,1.306,19,1.306,20,1.306,21,1.306,22,1.553,23,1.897,24,0.884,25,1.915,26,1.089,27,0.761,28,0.593,29,1.306,31,1.306,33,0.389,34,0.718,35,1.48,37,1.306,42,2.235,43,1.83,44,1.595,46,1.075,47,0.884,48,1.576,49,1.118,50,1.576,52,1.075,53,0.883,54,1.075,55,0.728,56,0.078,57,1.278,58,0.683,59,0.598,60,0.943,71,1.306,74,1.278,75,1.576,90,1.533,91,2.235,94,1.278,103,1.595,104,1.595,106,1.595,107,1.595,108,1.595,109,1.306,116,0.754,117,1.595,118,0.486,119,1.595,120,1.08,122,0.486,123,0.884,124,1.08,126,0.389,127,0.598,128,1.278,131,1.08,132,0.728,134,1.159,135,1.412,136,0.728,137,1.412,138,1.412,139,1.08,144,1.08,146,0.884,147,1.08,151,1.08,153,1.08,154,1.08,156,1.08,190,0.884,191,1.306,192,1.306,193,0.728,194,1.715,195,0.884,197,0.884,198,0.389,199,0.884,200,0.224,201,0.884,202,0.754,203,0.728,204,0.884,205,0.028,206,0.042,207,0.028,221,1.595,244,1.595,254,1.982,255,1.982,267,1.342,268,1.342,330,1.595,388,2.42,393,1.342,394,2.603,395,3.056,396,2.57,397,3.601,398,2.777,399,1.74,400,1.74,401,2.57,402,1.74,403,1.74,404,1.74,405,1.74,406,1.74,407,1.74,408,2.57,409,3.375,410,3.056]],["title/interfaces/LoggingViewerTranslation.html",[302,0.79,366,0.962]],["body/interfaces/LoggingViewerTranslation.html",[3,0.672,4,0.672,9,0.522,10,0.522,13,0.841,28,0.388,33,0.672,34,1.043,56,0.077,58,0.906,60,1.283,90,1.282,126,0.672,200,0.388,205,0.049,206,0.061,207,0.049,216,1.867,257,1.561,272,1.561,284,1.529,293,2.316,302,1.282,325,3.428,329,2.879,330,2.316,349,3.272,350,3.428,366,1.259,368,1.867,370,2.321,394,2.879,398,2.879,411,2.321,412,3.009,413,3.732,414,3.732,415,3.732,416,3.732,417,3.732]],["title/coverage.html",[418,2.417]],["body/coverage.html",[0,0.553,1,0.696,9,0.541,10,0.788,11,1.933,12,2.402,28,0.598,49,0.87,53,1.07,56,0.075,58,0.696,198,0.696,200,0.401,202,0.696,205,0.051,206,0.062,207,0.051,208,1.583,210,2.402,241,1.933,242,2.402,270,1.937,271,2.402,272,1.303,302,1.07,366,1.595,367,1.583,369,2.402,388,1.933,393,2.402,411,2.402,418,2.402,419,2.402,420,3.115,421,3.115,422,4.539,423,3.115,424,3.813,425,3.115,426,3.115,427,3.115,428,3.115,429,3.115,430,3.115]],["title/dependencies.html",[431,1.484,432,1.716]],["body/dependencies.html",[26,0.99,27,0.615,56,0.076,118,0.99,122,0.99,205,0.058,206,0.067,207,0.058,331,2.199,382,2.733,432,2.199,433,3.543,434,3.176,435,3.176,436,3.543,437,3.543]],["title/index.html",[33,0.43,438,1.924,439,1.924]],["body/index.html",[0,0.408,1,0.861,2,1.235,14,1.188,15,0.803,16,0.803,17,1.188,18,1.188,19,1.61,20,1.61,26,1.223,27,0.737,28,0.547,35,0.803,56,0.075,72,1.088,73,1.188,81,1.188,100,1.803,109,1.61,116,0.708,122,0.653,134,0.803,148,1.803,193,1.503,198,0.803,200,0.496,202,0.803,203,1.325,205,0.038,206,0.052,207,0.038,216,1.967,244,2.391,257,1.325,272,1.612,273,1.803,280,1.803,283,2.635,284,1.188,297,1.451,298,1.451,299,1.451,300,1.451,302,0.803,326,1.803,354,2.444,363,1.803,367,1.188,373,1.451,374,1.826,380,1.803,391,1.803,419,1.803,431,1.803,432,1.451,434,2.444,435,2.772,440,2.338,441,2.338,442,3.168,443,2.338,444,2.338,445,4.027,446,2.338,447,3.168,448,2.338,449,2.338,450,2.338,451,2.338,452,2.338,453,2.338,454,2.338,455,3.594,456,2.338,457,2.338,458,2.338,459,2.338,460,2.338,461,2.338,462,3.168,463,2.338,464,2.338,465,2.338,466,3.168,467,2.338,468,2.338,469,2.338,470,2.338,471,2.338,472,3.168,473,2.338,474,2.338,475,2.338,476,2.338,477,2.338,478,2.338,479,2.338,480,3.168,481,2.338,482,2.338,483,2.338,484,2.338,485,2.338,486,2.338,487,3.594,488,2.338,489,2.338,490,2.338,491,3.594,492,3.594,493,3.168,494,2.338,495,2.338,496,2.338,497,2.338,498,3.168,499,2.338,500,2.338,501,3.594,502,2.338,503,2.338,504,2.338,505,2.338,506,2.338,507,2.338,508,2.338,509,3.168,510,2.338]],["title/modules.html",[375,1.945]],["body/modules.html",[56,0.069,205,0.06,206,0.069,207,0.06,374,1.876,375,2.291,511,3.691]],["title/overview.html",[512,2.417]],["body/overview.html",[2,1.248,56,0.068,205,0.059,206,0.068,207,0.059,208,1.847,368,2.256,373,2.256,512,2.803,513,4.178,514,3.634,515,3.634]]],"invertedIndex":[["",{"_index":56,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["0",{"_index":170,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["1",{"_index":513,"title":{},"body":{"overview.html":{}}}],["1.0.1",{"_index":452,"title":{},"body":{"index.html":{}}}],["10.0.0",{"_index":436,"title":{},"body":{"dependencies.html":{}}}],["10/10",{"_index":428,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":422,"title":{},"body":{"coverage.html":{}}}],["12/12",{"_index":426,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":515,"title":{},"body":{"overview.html":{}}}],["2.0.0",{"_index":449,"title":{},"body":{"index.html":{}}}],["3.9.0",{"_index":453,"title":{},"body":{"index.html":{}}}],["3/3",{"_index":423,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":514,"title":{},"body":{"overview.html":{}}}],["4.0.0",{"_index":450,"title":{},"body":{"index.html":{}}}],["4.7.0",{"_index":448,"title":{},"body":{"index.html":{}}}],["4/4",{"_index":427,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":435,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["5/5",{"_index":425,"title":{},"body":{"coverage.html":{}}}],["7.0.0",{"_index":451,"title":{},"body":{"index.html":{}}}],["7/7",{"_index":424,"title":{},"body":{"coverage.html":{}}}],["8.0.0",{"_index":447,"title":{},"body":{"index.html":{}}}],["9.0.0",{"_index":434,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["a.timestamp.gettime",{"_index":180,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["abbrechen",{"_index":352,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["accessors",{"_index":214,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["according",{"_index":309,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["actual_component",{"_index":204,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["add",{"_index":480,"title":{},"body":{"index.html":{}}}],["additionally",{"_index":465,"title":{},"body":{"index.html":{}}}],["allowclearlogs",{"_index":282,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["allows",{"_index":466,"title":{},"body":{"index.html":{}}}],["android",{"_index":415,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["angular",{"_index":446,"title":{},"body":{"index.html":{}}}],["angular/common",{"_index":382,"title":{},"body":{"modules/LoggingViewerModule.html":{},"dependencies.html":{}}}],["angular/core",{"_index":118,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":384,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["another",{"_index":503,"title":{},"body":{"index.html":{}}}],["api",{"_index":509,"title":{},"body":{"index.html":{}}}],["app",{"_index":455,"title":{},"body":{"index.html":{}}}],["app.module.ts",{"_index":475,"title":{},"body":{"index.html":{}}}],["applies",{"_index":495,"title":{},"body":{"index.html":{}}}],["arbitrary",{"_index":467,"title":{},"body":{"index.html":{}}}],["async",{"_index":280,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["await",{"_index":354,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["b",{"_index":179,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["b.timestamp.gettime",{"_index":181,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["bar",{"_index":394,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["boolean",{"_index":85,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["browse",{"_index":511,"title":{},"body":{"modules.html":{}}}],["button",{"_index":293,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["callback",{"_index":254,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["called",{"_index":315,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["cancel",{"_index":325,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["changed",{"_index":221,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["check",{"_index":79,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["class",{"_index":127,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["clean",{"_index":103,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["clear",{"_index":322,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["clicked",{"_index":323,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["close",{"_index":329,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["comma",{"_index":62,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["commonmodule",{"_index":381,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["complete",{"_index":463,"title":{},"body":{"index.html":{}}}],["completely",{"_index":507,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":195,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["componentprops",{"_index":487,"title":{},"body":{"index.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{},"overview.html":{}}}],["condition",{"_index":83,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["configures",{"_index":319,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["const",{"_index":134,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["constructor",{"_index":46,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["constructor(loggingservice",{"_index":47,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["constructor(platform",{"_index":285,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["containing",{"_index":273,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["contains",{"_index":496,"title":{},"body":{"index.html":{}}}],["controlling",{"_index":328,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["coverage",{"_index":418,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creates",{"_index":52,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["ctor",{"_index":136,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["current",{"_index":15,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["currently",{"_index":297,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["data",{"_index":109,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["date:'dd.mm.yyyy",{"_index":184,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["date:\\'dd.mm.yyyy",{"_index":196,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["de",{"_index":300,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["debug",{"_index":235,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{}}}],["declarations",{"_index":377,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["defined",{"_index":50,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["delete",{"_index":292,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["dependencies",{"_index":432,"title":{"dependencies.html":{}},"body":{"dependencies.html":{},"index.html":{}}}],["describes",{"_index":370,"title":{},"body":{"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["description",{"_index":13,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["development",{"_index":458,"title":{},"body":{"index.html":{}}}],["directive",{"_index":193,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["directives",{"_index":203,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["displaying",{"_index":14,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["displays",{"_index":494,"title":{},"body":{"index.html":{}}}],["docs",{"_index":342,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["documentation",{"_index":419,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["done",{"_index":107,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["element",{"_index":192,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["embedded",{"_index":17,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["emits",{"_index":227,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["empty",{"_index":401,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["en",{"_index":299,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["english",{"_index":311,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["entrycomponents",{"_index":392,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["error",{"_index":259,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["event",{"_index":146,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["eventemitter",{"_index":218,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["eventhandler",{"_index":314,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["existing",{"_index":295,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["export",{"_index":126,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["exports",{"_index":379,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["expression",{"_index":468,"title":{},"body":{"index.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["fill",{"_index":508,"title":{},"body":{"index.html":{}}}],["filter",{"_index":71,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["filter.service",{"_index":123,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["filter.service.ts",{"_index":210,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"coverage.html":{}}}],["filter.service.ts:14",{"_index":219,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:18",{"_index":215,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:42",{"_index":223,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:50",{"_index":225,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:59",{"_index":230,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filter.service.ts:67",{"_index":232,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filterchanged",{"_index":213,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["filterchangedsubscription",{"_index":131,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["filtering",{"_index":244,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["filterlogmessages",{"_index":38,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbylevel",{"_index":39,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbylevel(message",{"_index":76,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbysearch",{"_index":40,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["filterlogmessagesbysearch(message",{"_index":88,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["flag",{"_index":290,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["formsmodule",{"_index":383,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["fulfill",{"_index":115,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["fulfills",{"_index":82,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["getlevel",{"_index":222,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["gets",{"_index":92,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["getsearch",{"_index":229,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["getting",{"_index":438,"title":{"index.html":{}},"body":{}}],["gettranslation",{"_index":277,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["gettranslation().cancel",{"_index":365,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["gettranslation().title",{"_index":364,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["helper",{"_index":307,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["hh:mm:ss",{"_index":185,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["html",{"_index":191,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["icon",{"_index":417,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["identifier",{"_index":420,"title":{},"body":{"coverage.html":{}}}],["ignored",{"_index":305,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["implemented",{"_index":464,"title":{},"body":{"index.html":{}}}],["implements",{"_index":21,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["import",{"_index":116,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["imports",{"_index":391,"title":{},"body":{"modules/LoggingViewerModule.html":{},"index.html":{}}}],["include",{"_index":482,"title":{},"body":{"index.html":{}}}],["index",{"_index":33,"title":{"index.html":{}},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["initialize",{"_index":106,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["initializes",{"_index":318,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["injectable",{"_index":208,"title":{"injectables/LoggingViewerFilterService.html":{}},"body":{"injectables/LoggingViewerFilterService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":209,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["input",{"_index":117,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["inputs",{"_index":44,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["install",{"_index":473,"title":{},"body":{"index.html":{}}}],["instance",{"_index":54,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["instead",{"_index":68,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["interface",{"_index":366,"title":{"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{}},"body":{"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{},"overview.html":{}}}],["internal",{"_index":217,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["ion",{"_index":483,"title":{},"body":{"index.html":{}}}],["ionic",{"_index":26,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["ionic/angular",{"_index":331,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"dependencies.html":{}}}],["ionicmodule",{"_index":385,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["ionicmodule.forroot(appcomponent",{"_index":476,"title":{},"body":{"index.html":{}}}],["ionicons",{"_index":437,"title":{},"body":{"dependencies.html":{}}}],["ionviewdidenter",{"_index":278,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ios",{"_index":414,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["isandroid",{"_index":276,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["issue",{"_index":505,"title":{},"body":{"index.html":{}}}],["language",{"_index":283,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["languagede",{"_index":338,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["languageen",{"_index":337,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["latest",{"_index":440,"title":{},"body":{"index.html":{}}}],["legend",{"_index":190,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["level",{"_index":81,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"index.html":{}}}],["level(value",{"_index":238,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["levels",{"_index":243,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels'},{'name",{"_index":199,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["levels.component",{"_index":387,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["levels.component.html",{"_index":246,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.scss",{"_index":245,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts",{"_index":242,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"coverage.html":{}}}],["levels.component.ts:25",{"_index":256,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:30",{"_index":260,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:33",{"_index":250,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:62",{"_index":252,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:80",{"_index":251,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels.component.ts:92",{"_index":253,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levels/logging",{"_index":241,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"modules/LoggingViewerModule.html":{},"coverage.html":{}}}],["levels>&lt;/ionic",{"_index":262,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["levelvalue",{"_index":163,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["line:completed",{"_index":341,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["list",{"_index":64,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["load",{"_index":97,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loaded",{"_index":66,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["loadlogmessages",{"_index":41,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["local",{"_index":112,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["localstorage",{"_index":67,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["localstoragekey",{"_index":175,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["localstoragekeys",{"_index":45,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["log",{"_index":72,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["logged",{"_index":148,"title":{},"body":{"components/LoggingViewerComponent.html":{},"index.html":{}}}],["logger",{"_index":94,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["logging",{"_index":27,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["loggingservice",{"_index":48,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.component",{"_index":133,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.filter.service",{"_index":233,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.levels.component",{"_index":263,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.modal.component",{"_index":343,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingservice.getlogger(\"ionic.logging.viewer.search.component",{"_index":407,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["loggingservice.logmessageschanged",{"_index":145,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loggingservice](../../../ionic",{"_index":140,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loggingviewercomponent",{"_index":1,"title":{"components/LoggingViewerComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewercomponent](loggingviewercomponent.html",{"_index":333,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingviewerfilterservice",{"_index":49,"title":{"injectables/LoggingViewerFilterService.html":{}},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["loggingviewerfilterservice.filterchanged",{"_index":151,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["loggingviewerfilterservice](loggingviewerfilterservice.html",{"_index":139,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["loggingviewerlevelscomponent",{"_index":198,"title":{"components/LoggingViewerLevelsComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewerlevelscomponent](loggingviewerlevelscomponent.html",{"_index":334,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingviewermodalcomponent",{"_index":200,"title":{"components/LoggingViewerModalComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewermodalcomponent](../classes/loggingviewermodalcomponent.html",{"_index":372,"title":{},"body":{"interfaces/LoggingViewerModalProperties.html":{}}}],["loggingviewermodalmanager.openmodal",{"_index":500,"title":{},"body":{"index.html":{}}}],["loggingviewermodalproperties",{"_index":367,"title":{"interfaces/LoggingViewerModalProperties.html":{}},"body":{"interfaces/LoggingViewerModalProperties.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewermodule",{"_index":374,"title":{"modules/LoggingViewerModule.html":{}},"body":{"modules/LoggingViewerModule.html":{},"index.html":{},"modules.html":{}}}],["loggingviewersearchcomponent",{"_index":202,"title":{"components/LoggingViewerSearchComponent.html":{}},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{},"index.html":{}}}],["loggingviewersearchcomponent](loggingviewersearchcomponent.html",{"_index":335,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["loggingviewertranslation",{"_index":302,"title":{"interfaces/LoggingViewerTranslation.html":{}},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["loglevel",{"_index":269,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["loglevelconverter",{"_index":121,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loglevelconverter.levelfromstring(levelvalue",{"_index":166,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loglevelconverter.levelfromstring(message.level",{"_index":165,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["loglevels",{"_index":247,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["logmessage",{"_index":77,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.level",{"_index":186,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.logger",{"_index":187,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.methodname",{"_index":188,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessage.timestamp",{"_index":183,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessages",{"_index":129,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessageschangedsubscription",{"_index":130,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logmessagesfordisplay",{"_index":36,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["logs",{"_index":16,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["lt;ionic",{"_index":124,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["mainly",{"_index":101,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["matching",{"_index":206,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["meant",{"_index":457,"title":{},"body":{"index.html":{}}}],["memory",{"_index":69,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["message",{"_index":84,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message's",{"_index":80,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message.logger.search(searchvalue",{"_index":169,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message.message.join(\"|\").search(searchvalue",{"_index":172,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["message.methodname.search(searchvalue",{"_index":171,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["messagepart",{"_index":189,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["messages",{"_index":73,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["method",{"_index":95,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["methodname",{"_index":135,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["methods",{"_index":37,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["modal",{"_index":272,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["modal'},{'name",{"_index":201,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["modal.component",{"_index":390,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["modal.component.html",{"_index":275,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.scss",{"_index":274,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts",{"_index":271,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:100",{"_index":313,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:110",{"_index":324,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:122",{"_index":321,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:143",{"_index":306,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:29",{"_index":296,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:36",{"_index":303,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:42",{"_index":301,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:48",{"_index":289,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:53",{"_index":327,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:59",{"_index":288,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.component.ts:82",{"_index":317,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modal.present",{"_index":490,"title":{},"body":{"index.html":{}}}],["modal/logging",{"_index":270,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"coverage.html":{}}}],["modalcontroller",{"_index":287,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["modified",{"_index":152,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["modifies",{"_index":268,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["module",{"_index":373,"title":{"modules/LoggingViewerModule.html":{}},"body":{"index.html":{},"overview.html":{}}}],["modules",{"_index":375,"title":{"modules.html":{}},"body":{"modules/LoggingViewerModule.html":{},"modules.html":{}}}],["multi",{"_index":491,"title":{},"body":{"index.html":{}}}],["name",{"_index":57,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["necessary",{"_index":485,"title":{},"body":{"index.html":{}}}],["need",{"_index":493,"title":{},"body":{"index.html":{}}}],["needed",{"_index":216,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["new",{"_index":53,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["next",{"_index":340,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ngmodule",{"_index":380,"title":{},"body":{"modules/LoggingViewerModule.html":{},"index.html":{}}}],["ngondestroy",{"_index":42,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["ngoninit",{"_index":43,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["npm",{"_index":472,"title":{},"body":{"index.html":{}}}],["object",{"_index":363,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["older",{"_index":443,"title":{},"body":{"index.html":{}}}],["onclearlogs",{"_index":279,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["onclose",{"_index":281,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ondestroy",{"_index":23,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["one",{"_index":478,"title":{},"body":{"index.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["onlevelchanged",{"_index":249,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["onsearchchanged",{"_index":397,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["open",{"_index":504,"title":{},"body":{"index.html":{}}}],["opened",{"_index":316,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["openmodal",{"_index":486,"title":{},"body":{"index.html":{}}}],["optional",{"_index":59,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["otherwise",{"_index":312,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["overview",{"_index":512,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":431,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["page",{"_index":19,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["pages",{"_index":479,"title":{},"body":{"index.html":{}}}],["param",{"_index":162,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["parameter",{"_index":501,"title":{},"body":{"index.html":{}}}],["parameters",{"_index":55,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["pass",{"_index":506,"title":{},"body":{"index.html":{}}}],["passed",{"_index":371,"title":{},"body":{"interfaces/LoggingViewerModalProperties.html":{}}}],["peer",{"_index":433,"title":{},"body":{"dependencies.html":{}}}],["placeholder",{"_index":398,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["placeholder=\"search\">&lt;/ionic",{"_index":406,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["platform",{"_index":286,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["platform.is(\"android",{"_index":345,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["prepare",{"_index":346,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["private",{"_index":128,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["production",{"_index":460,"title":{},"body":{"index.html":{}}}],["promise",{"_index":326,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"index.html":{}}}],["properties",{"_index":34,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["properties.model.ts",{"_index":369,"title":{},"body":{"interfaces/LoggingViewerModalProperties.html":{},"coverage.html":{}}}],["property",{"_index":110,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["providers",{"_index":378,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["provides",{"_index":461,"title":{},"body":{"index.html":{}}}],["public",{"_index":35,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["purposes",{"_index":100,"title":{},"body":{"components/LoggingViewerComponent.html":{},"index.html":{}}}],["read",{"_index":111,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["reading",{"_index":108,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["recommended",{"_index":481,"title":{},"body":{"index.html":{}}}],["refresh",{"_index":147,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["regexp(this.loggingviewerfilterservice.search",{"_index":168,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["removes",{"_index":294,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["result",{"_index":205,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["results",{"_index":207,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{}}}],["return",{"_index":159,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerModalComponent.html":{}}}],["returning",{"_index":308,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["returns",{"_index":74,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["rxjs",{"_index":120,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["same",{"_index":442,"title":{},"body":{"index.html":{}}}],["sample",{"_index":469,"title":{},"body":{"index.html":{}}}],["saveimport",{"_index":474,"title":{},"body":{"index.html":{}}}],["screenshots",{"_index":470,"title":{},"body":{"index.html":{}}}],["search",{"_index":90,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["search(value",{"_index":240,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["search.component",{"_index":389,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["search.component.html",{"_index":396,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.scss",{"_index":395,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts",{"_index":393,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:27",{"_index":400,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:32",{"_index":405,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:35",{"_index":399,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:56",{"_index":403,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:77",{"_index":402,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search.component.ts:89",{"_index":404,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["search/logging",{"_index":388,"title":{},"body":{"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"coverage.html":{}}}],["searched",{"_index":93,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["searchplaceholder",{"_index":349,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["searchvalue",{"_index":167,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{}}}],["see",{"_index":510,"title":{},"body":{"index.html":{}}}],["select",{"_index":502,"title":{},"body":{"index.html":{}}}],["selected",{"_index":261,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["selectedlevel",{"_index":248,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["selector",{"_index":25,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["separated",{"_index":63,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["service",{"_index":122,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"dependencies.html":{},"index.html":{}}}],["service/typedoc/index.html",{"_index":141,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["set",{"_index":65,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["setlevel(value",{"_index":224,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["sets",{"_index":226,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["setsearch(value",{"_index":231,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["settings",{"_index":212,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["showing",{"_index":291,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["shown",{"_index":330,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["slog",{"_index":228,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["small",{"_index":454,"title":{},"body":{"index.html":{}}}],["someone",{"_index":267,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["specified",{"_index":304,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["src/lib/logging",{"_index":10,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["started",{"_index":439,"title":{"index.html":{}},"body":{}}],["statements",{"_index":421,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":336,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["storage",{"_index":113,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["storing",{"_index":211,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["string",{"_index":60,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["styleurls",{"_index":29,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["subscribe",{"_index":144,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["subscription",{"_index":119,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["successful",{"_index":87,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["suchen",{"_index":353,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["support",{"_index":492,"title":{},"body":{"index.html":{}}}],["supported",{"_index":298,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"index.html":{}}}],["table",{"_index":430,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":429,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["templateurl",{"_index":31,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["test",{"_index":99,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["testing",{"_index":459,"title":{},"body":{"index.html":{}}}],["text",{"_index":413,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["texts",{"_index":498,"title":{},"body":{"index.html":{}}}],["therefore",{"_index":499,"title":{},"body":{"index.html":{}}}],["this.filterchanged",{"_index":237,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.filterchanged.emit",{"_index":239,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.filterchangedsubscription",{"_index":153,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.filterchangedsubscription.unsubscribe",{"_index":156,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.filterlogmessages",{"_index":143,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.filterlogmessagesbylevel(message",{"_index":160,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.filterlogmessagesbysearch(message",{"_index":161,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.isandroid",{"_index":344,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.language",{"_index":361,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.levelvalue",{"_index":234,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.loadlogmessages",{"_index":142,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.localstoragekeys",{"_index":173,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["this.localstoragekeys.split",{"_index":176,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerModalComponent.html":{}}}],["this.logger",{"_index":132,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.logger.entry(methodname",{"_index":137,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.logger.exit(methodname",{"_index":138,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.loggingservice.getlogmessages",{"_index":182,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.loggingservice.logmessageschanged.subscribe(async",{"_index":150,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.loggingservice.removelogmessages",{"_index":357,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.loggingservice.removelogmessagesfromlocalstorage(localstoragekey",{"_index":356,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.loggingviewerfilterservice.filterchanged.subscribe",{"_index":154,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["this.loggingviewerfilterservice.level",{"_index":164,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{}}}],["this.loggingviewerfilterservice.search",{"_index":410,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["this.loglevels",{"_index":264,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["this.loglevels.push",{"_index":265,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["this.logmessages",{"_index":174,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessages.concat(this.loggingservice.getlogmessagesfromlocalstorage(localstoragekey",{"_index":177,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessages.filter((message",{"_index":158,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessages.sort((a",{"_index":178,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessageschangedsubscription",{"_index":149,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessageschangedsubscription.unsubscribe",{"_index":155,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.logmessagesfordisplay",{"_index":157,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["this.modalcontroller.create",{"_index":489,"title":{},"body":{"index.html":{}}}],["this.modalcontroller.dismiss",{"_index":355,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.placeholder",{"_index":408,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["this.search",{"_index":409,"title":{},"body":{"components/LoggingViewerSearchComponent.html":{}}}],["this.searchvalue",{"_index":236,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["this.selectedlanguage",{"_index":488,"title":{},"body":{"index.html":{}}}],["this.selectedlevel",{"_index":266,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["this.translation",{"_index":359,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations",{"_index":347,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations[loggingviewermodalcomponent.languagede",{"_index":351,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations[loggingviewermodalcomponent.languageen",{"_index":348,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["this.translations[this.language",{"_index":362,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["title",{"_index":350,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerTranslation.html":{}}}],["toolbar",{"_index":484,"title":{},"body":{"index.html":{}}}],["translatable",{"_index":497,"title":{},"body":{"index.html":{}}}],["translation",{"_index":284,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["translation.model",{"_index":332,"title":{},"body":{"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{}}}],["translation.model.ts",{"_index":411,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["translations",{"_index":320,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["triggered",{"_index":220,"title":{},"body":{"injectables/LoggingViewerFilterService.html":{}}}],["true",{"_index":86,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["tslint:disable",{"_index":339,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["two",{"_index":462,"title":{},"body":{"index.html":{}}}],["type",{"_index":58,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{}}}],["typeof",{"_index":358,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["ui",{"_index":255,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["undefined",{"_index":360,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["unit",{"_index":98,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["up",{"_index":104,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["usage",{"_index":471,"title":{},"body":{"index.html":{}}}],["use",{"_index":445,"title":{},"body":{"index.html":{}}}],["used",{"_index":257,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"interfaces/LoggingViewerTranslation.html":{},"index.html":{}}}],["using",{"_index":20,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["valid",{"_index":310,"title":{},"body":{"components/LoggingViewerModalComponent.html":{}}}],["value",{"_index":91,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["values",{"_index":412,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["var",{"_index":194,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["version",{"_index":441,"title":{},"body":{"index.html":{}}}],["versions",{"_index":444,"title":{},"body":{"index.html":{}}}],["viewer",{"_index":28,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"interfaces/LoggingViewerModalProperties.html":{},"modules/LoggingViewerModule.html":{},"components/LoggingViewerSearchComponent.html":{},"interfaces/LoggingViewerTranslation.html":{},"coverage.html":{},"index.html":{}}}],["viewer'},{'name",{"_index":197,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["viewer.component",{"_index":386,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["viewer.component.html",{"_index":32,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.scss",{"_index":30,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts",{"_index":12,"title":{},"body":{"components/LoggingViewerComponent.html":{},"coverage.html":{}}}],["viewer.component.ts:108",{"_index":78,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:124",{"_index":89,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:135",{"_index":96,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:26",{"_index":61,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:31",{"_index":114,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:36",{"_index":51,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:59",{"_index":105,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:83",{"_index":102,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.component.ts:96",{"_index":70,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["viewer.module.ts",{"_index":376,"title":{},"body":{"modules/LoggingViewerModule.html":{}}}],["viewer/logging",{"_index":11,"title":{},"body":{"components/LoggingViewerComponent.html":{},"modules/LoggingViewerModule.html":{},"coverage.html":{}}}],["viewer>&lt;/ionic",{"_index":125,"title":{},"body":{"components/LoggingViewerComponent.html":{}}}],["void",{"_index":75,"title":{},"body":{"components/LoggingViewerComponent.html":{},"injectables/LoggingViewerFilterService.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerModalComponent.html":{},"components/LoggingViewerSearchComponent.html":{}}}],["want",{"_index":477,"title":{},"body":{"index.html":{}}}],["warn",{"_index":258,"title":{},"body":{"components/LoggingViewerLevelsComponent.html":{}}}],["web",{"_index":18,"title":{},"body":{"components/LoggingViewerComponent.html":{},"components/LoggingViewerLevelsComponent.html":{},"components/LoggingViewerSearchComponent.html":{},"index.html":{}}}],["windows",{"_index":416,"title":{},"body":{"interfaces/LoggingViewerTranslation.html":{}}}],["written",{"_index":456,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/LoggingViewerComponent.html":{"url":"components/LoggingViewerComponent.html","title":"component - LoggingViewerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer/logging-viewer.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the current logs.\nThe component can be embedded in any web page using:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer\n            \n\n            \n                styleUrls\n                ./logging-viewer.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logMessagesForDisplay\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterLogMessages\n                            \n                            \n                                    Public\n                                filterLogMessagesByLevel\n                            \n                            \n                                    Public\n                                filterLogMessagesBySearch\n                            \n                            \n                                    Public\n                                loadLogMessages\n                            \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                localStorageKeys\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, loggingViewerFilterService: LoggingViewerFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer/logging-viewer.component.ts:36\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingViewerFilterService\n                                                  \n                                                        \n                                                                        LoggingViewerFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        localStorageKeys\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:26\n                            \n                        \n                \n                    \n                        Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterLogMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterLogMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:96\n                \n            \n\n\n            \n                \n                    Filter the log messages.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterLogMessagesByLevel\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterLogMessagesByLevel(message: LogMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:108\n                \n            \n\n\n            \n                \n                    Check if the log message's level fulfills the level condition.\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            LogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the log message to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if check was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            filterLogMessagesBySearch\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    filterLogMessagesBySearch(message: LogMessage)\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:124\n                \n            \n\n\n            \n                \n                    Check if the log message fulfills the search condition.\nThe search value gets searched in:\n\nlogger name\nmethod name\nmessage\n\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                            LogMessage\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        the log message to check\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        true if check was successful\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            loadLogMessages\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    loadLogMessages()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:135\n                \n            \n\n\n            \n                \n                    Load the current log messages.\nFor unit test purposes mainly.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:83\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:59\n                \n            \n\n\n            \n                \n                    Initialize the component.\nThis is done by reading the filter data from LoggingViewerFilterService\nand the log messages from LoggingService.\nIf the localStorageKeys property is set, the messages are read from local storage.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logMessagesForDisplay\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LogMessage[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer/logging-viewer.component.ts:31\n                            \n                        \n\n                \n                    \n                        Log messages which fulfill the filter condition.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit, Input } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { Logger, LoggingService, LogLevelConverter, LogMessage } from \"ionic-logging-service\";\n\nimport { LoggingViewerFilterService } from \"../logging-viewer-filter.service\";\n\n/**\n * Component for displaying the current logs.\n *\n * The component can be embedded in any web page using:\n *\n * &lt;ionic-logging-viewer>&lt;/ionic-logging-viewer>\n */\n@Component({\n\tselector: \"ionic-logging-viewer\",\n\ttemplateUrl: \"./logging-viewer.component.html\",\n\tstyleUrls: [\"./logging-viewer.component.scss\"]\n})\nexport class LoggingViewerComponent implements OnInit, OnDestroy {\n\n\t/**\n\t * Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\t */\n\t@Input()\n\tpublic localStorageKeys: string;\n\n\t/**\n\t * Log messages which fulfill the filter condition.\n\t */\n\tpublic logMessagesForDisplay: LogMessage[];\n\n\tprivate logger: Logger;\n\tprivate logMessages: LogMessage[];\n\tprivate logMessagesChangedSubscription: Subscription;\n\tprivate filterChangedSubscription: Subscription;\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tprivate loggingService: LoggingService,\n\t\tprivate loggingViewerFilterService: LoggingViewerFilterService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initialize the component.\n\t *\n\t * This is done by reading the filter data from [LoggingViewerFilterService](LoggingViewerFilterService.html)\n\t * and the log messages from [LoggingService](../../../ionic-logging-service/typedoc/index.html).\n\t * If the localStorageKeys property is set, the messages are read from local storage.\n\t */\n\tpublic ngOnInit(): void {\n\t\tconst methodName = \"ngOnInit\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.loadLogMessages();\n\t\tthis.filterLogMessages();\n\n\t\t// subscribe to loggingService.logMessagesChanged event, to refresh, when new message is logged\n\t\tthis.logMessagesChangedSubscription = this.loggingService.logMessagesChanged.subscribe(async () => {\n\t\t\tthis.loadLogMessages();\n\t\t\tthis.filterLogMessages();\n\t\t});\n\n\t\t// subscribe to loggingViewerFilterService.filterChanged event, to refresh, when filter is modified\n\t\tthis.filterChangedSubscription = this.loggingViewerFilterService.filterChanged.subscribe(() => {\n\t\t\tthis.filterLogMessages();\n\t\t});\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tconst methodName = \"ngOnDestroy\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logMessagesChangedSubscription.unsubscribe();\n\t\tthis.filterChangedSubscription.unsubscribe();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Filter the log messages.\n\t */\n\tpublic filterLogMessages(): void {\n\t\tthis.logMessagesForDisplay = this.logMessages.filter((message) => {\n\t\t\treturn this.filterLogMessagesByLevel(message) && this.filterLogMessagesBySearch(message);\n\t\t});\n\t}\n\n\t/**\n\t * Check if the log message's level fulfills the level condition.\n\t *\n\t * @param message the log message to check\n\t * @returns true if check was successful\n\t */\n\tpublic filterLogMessagesByLevel(message: LogMessage): boolean {\n\t\tconst levelValue = this.loggingViewerFilterService.level;\n\t\treturn LogLevelConverter.levelFromString(message.level) >= LogLevelConverter.levelFromString(levelValue);\n\t}\n\n\t/**\n\t * Check if the log message fulfills the search condition.\n\t *\n\t * The search value gets searched in:\n\t * - logger name\n\t * - method name\n\t * - message\n\t *\n\t * @param message the log message to check\n\t * @returns true if check was successful\n\t */\n\tpublic filterLogMessagesBySearch(message: LogMessage): boolean {\n\t\tconst searchValue = new RegExp(this.loggingViewerFilterService.search, \"i\");\n\t\treturn message.logger.search(searchValue) >= 0 ||\n\t\t\tmessage.methodName.search(searchValue) >= 0 ||\n\t\t\tmessage.message.join(\"|\").search(searchValue) >= 0;\n\t}\n\n\t/**\n\t * Load the current log messages.\n\t * For unit test purposes mainly.\n\t */\n\tpublic loadLogMessages(): void {\n\t\tif (this.localStorageKeys) {\n\t\t\tthis.logMessages = [];\n\t\t\tfor (const localStorageKey of this.localStorageKeys.split(\",\")) {\n\t\t\t\tthis.logMessages = this.logMessages.concat(this.loggingService.getLogMessagesFromLocalStorage(localStorageKey));\n\t\t\t}\n\t\t\tthis.logMessages = this.logMessages.sort((a, b) => a.timeStamp.getTime() - b.timeStamp.getTime());\n\t\t} else {\n\t\t\tthis.logMessages = this.loggingService.getLogMessages();\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t\n\t\t\t{{ logMessage.timeStamp | date:'dd.MM.yyyy HH:mm:ss' }} {{ logMessage.level }}\n\t\t\t{{ logMessage.logger }}\n\t\t\t\n\t\t\t\t{{ logMessage.methodName }}\n\t\t\t\t {{ messagePart }} \n\t\t\t\n\t\t\n\t\n\n    \n\n    \n                \n                    ./logging-viewer.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t\t\t\t{{ logMessage.timeStamp | date:\\'dd.MM.yyyy HH:mm:ss\\' }} {{ logMessage.level }}\t\t\t{{ logMessage.logger }}\t\t\t\t\t\t\t{{ logMessage.methodName }}\t\t\t\t {{ messagePart }} \t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoggingViewerFilterService.html":{"url":"injectables/LoggingViewerFilterService.html","title":"injectable - LoggingViewerFilterService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoggingViewerFilterService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logging-viewer-filter.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for storing filter settings for logging viewer.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                filterChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    level\n                                \n                                \n                                    search\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-filter.service.ts:18\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                needed for internal logging.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterChanged\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-filter.service.ts:14\n                            \n                        \n\n                \n                    \n                        Event triggered when the filter was changed.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        level\n                    \n                \n\n                \n                    \n                        getlevel()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:42\n                                \n                            \n                    \n                        \n                                Gets the current log level.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setlevel(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:50\n                                \n                            \n                    \n                        \n                                Sets the new log level and emits a filterChanged event.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    new slog level\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        search\n                    \n                \n\n                \n                    \n                        getsearch()\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:59\n                                \n                            \n                    \n                        \n                                Gets the current search value.\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n                \n                    \n                        setsearch(value: string)\n                    \n                \n                            \n                                \n                                    Defined in src/lib/logging-viewer-filter.service.ts:67\n                                \n                            \n                    \n                        \n                                Sets the new search value and emits a filterChanged event.\n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                        Description\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                            string\n                                                            \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                            \n                                                                    new search value\n\n                                                            \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :         void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { EventEmitter, Injectable } from \"@angular/core\";\n\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\n/**\n * Service for storing filter settings for logging viewer.\n */\n@Injectable()\nexport class LoggingViewerFilterService {\n\n\t/**\n\t * Event triggered when the filter was changed.\n\t */\n\tpublic filterChanged: EventEmitter;\n\n\tprivate logger: Logger;\n\tprivate levelValue: string;\n\tprivate searchValue: string;\n\n\t/**\n\t * Creates a new instance of the service.\n\t * @param loggingService needed for internal logging.\n\t */\n\tconstructor(\n\t\tloggingService: LoggingService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Filter.Service\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.levelValue = \"DEBUG\";\n\t\tthis.searchValue = \"\";\n\t\tthis.filterChanged = new EventEmitter();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Gets the current log level.\n\t * @return log level\n\t */\n\tpublic get level(): string {\n\t\treturn this.levelValue;\n\t}\n\n\t/**\n\t * Sets the new log level and emits a filterChanged event.\n\t * @param value new slog level\n\t */\n\tpublic set level(value: string) {\n\t\tthis.levelValue = value;\n\t\tthis.filterChanged.emit();\n\t}\n\n\t/**\n\t * Gets the current search value.\n\t * @return search value\n\t */\n\tpublic get search(): string {\n\t\treturn this.searchValue;\n\t}\n\n\t/**\n\t * Sets the new search value and emits a filterChanged event.\n\t * @param value new search value\n\t */\n\tpublic set search(value: string) {\n\t\tthis.searchValue = value;\n\t\tthis.filterChanged.emit();\n\t}\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingViewerLevelsComponent.html":{"url":"components/LoggingViewerLevelsComponent.html","title":"component - LoggingViewerLevelsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerLevelsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer-levels/logging-viewer-levels.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the log levels for filtering the current logs.\nThe component can be embedded in any web page using:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer-levels\n            \n\n            \n                styleUrls\n                ./logging-viewer-levels.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer-levels.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                logLevels\n                            \n                            \n                                    Public\n                                selectedLevel\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onLevelChanged\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, loggingViewerFilterService: LoggingViewerFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:33\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingViewerFilterService\n                                                  \n                                                        \n                                                                        LoggingViewerFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:80\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:62\n                \n            \n\n\n            \n                \n                    Initialize the component.\nThis is done by reading the filter data from LoggingViewerFilterService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onLevelChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onLevelChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:92\n                \n            \n\n\n            \n                \n                    Callback when the level was changed in the UI.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            logLevels\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:25\n                            \n                        \n\n                \n                    \n                        Log levels used for filtering: DEBUG, INFO, WARN, ERROR\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectedLevel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-levels/logging-viewer-levels.component.ts:30\n                            \n                        \n\n                \n                    \n                        Selected level.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnDestroy, OnInit } from \"@angular/core\";\nimport { Subscription } from \"rxjs\";\n\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\nimport { LoggingViewerFilterService } from \"../logging-viewer-filter.service\";\n\n/**\n * Component for displaying the log levels for filtering the current logs.\n *\n * The component can be embedded in any web page using:\n *\n * &lt;ionic-logging-viewer-levels>&lt;/ionic-logging-viewer-levels>\n */\n@Component({\n\tselector: \"ionic-logging-viewer-levels\",\n\ttemplateUrl: \"./logging-viewer-levels.component.html\",\n\tstyleUrls: [\"./logging-viewer-levels.component.scss\"]\n})\nexport class LoggingViewerLevelsComponent implements OnInit, OnDestroy {\n\n\t/**\n\t * Log levels used for filtering: DEBUG, INFO, WARN, ERROR\n\t */\n\tpublic logLevels: string[];\n\n\t/**\n\t * Selected level.\n\t */\n\tpublic selectedLevel: string;\n\n\tprivate logger: Logger;\n\tprivate filterChangedSubscription: Subscription;\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tloggingService: LoggingService,\n\t\tprivate loggingViewerFilterService: LoggingViewerFilterService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Levels.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logLevels = [];\n\t\tthis.logLevels.push(\n\t\t\t\"DEBUG\",\n\t\t\t\"INFO\",\n\t\t\t\"WARN\",\n\t\t\t\"ERROR\",\n\t\t);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initialize the component.\n\t *\n\t * This is done by reading the filter data from [LoggingViewerFilterService](LoggingViewerFilterService.html).\n\t */\n\tpublic ngOnInit(): void {\n\t\tconst methodName = \"ngOnInit\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.selectedLevel = this.loggingViewerFilterService.level;\n\n\t\t// subscribe to loggingViewerFilterService.filterChanged event, to refresh,\n\t\t// when someone else modifies the level\n\t\tthis.filterChangedSubscription = this.loggingViewerFilterService.filterChanged.subscribe(() => {\n\t\t\tthis.selectedLevel = this.loggingViewerFilterService.level;\n\t\t});\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tconst methodName = \"ngOnDestroy\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.filterChangedSubscription.unsubscribe();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Callback when the level was changed in the UI.\n\t */\n\tpublic onLevelChanged(): void {\n\t\tconst methodName = \"onLevelChanged\";\n\t\tthis.logger.entry(methodName, this.selectedLevel);\n\n\t\tthis.loggingViewerFilterService.level = this.selectedLevel;\n\n\t\tthis.logger.exit(methodName);\n\t}\n}\n\n    \n\n    \n        \n\t{{ logLevel }}\n\n    \n\n    \n                \n                    ./logging-viewer-levels.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t{{ logLevel }}'\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerLevelsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingViewerModalComponent.html":{"url":"components/LoggingViewerModalComponent.html","title":"component - LoggingViewerModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer-modal/logging-viewer-modal.component.ts\n\n\n    \n        Description\n    \n    \n        Ionic modal containing LoggingViewerComponent,\nLoggingViewerLevelsComponent and\nLoggingViewerSearchComponent.\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer-modal\n            \n\n            \n                styleUrls\n                ./logging-viewer-modal.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAndroid\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getTranslation\n                            \n                            \n                                    Public\n                                ionViewDidEnter\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onClearLogs\n                            \n                            \n                                    Public\n                                    Async\n                                onClose\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                allowClearLogs\n                            \n                            \n                                language\n                            \n                            \n                                localStorageKeys\n                            \n                            \n                                translation\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(platform: Platform, modalController: ModalController, loggingService: LoggingService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:59\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        platform\n                                                  \n                                                        \n                                                                    Platform\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modalController\n                                                  \n                                                        \n                                                                    ModalController\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        allowClearLogs\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:48\n                            \n                        \n                \n                    \n                        Flag showing a delete button, which removes all existing log messages.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        language\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:29\n                            \n                        \n                \n                    \n                        Language to be used for the modal.\nCurrently supported: en, de\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        localStorageKeys\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:42\n                            \n                        \n                \n                    \n                        Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        translation\n                    \n                \n                \n                    \n                        Type :         LoggingViewerTranslation\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:36\n                            \n                        \n                \n                    \n                        Translation to be used for the modal.\nIf specified, the language is ignored.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            getTranslation\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getTranslation()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:143\n                \n            \n\n\n            \n                \n                    Helper method returning the current translation:\n\nthe property translation if defined\nthe translation according property language if valid\nEnglish translation, otherwise\n\n\n\n                    \n                        Returns :         LoggingViewerTranslation\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ionViewDidEnter\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ionViewDidEnter()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:100\n                \n            \n\n\n            \n                \n                    Eventhandler called by Ionic when the modal is opened.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:82\n                \n            \n\n\n            \n                \n                    Initializes the LoggingViewerModalComponent.\nIt configures the supported translations.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onClearLogs\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClearLogs()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:122\n                \n            \n\n\n            \n                \n                    Eventhandler called when the clear button is clicked.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            Async\n                            onClose\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onClose()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:110\n                \n            \n\n\n            \n                \n                    Eventhandler called when the cancel button is clicked.\n\n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            isAndroid\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-modal/logging-viewer-modal.component.ts:53\n                            \n                        \n\n                \n                    \n                        Flag controlling which close button will be shown.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from \"@angular/core\";\n\nimport { ModalController, Platform } from \"@ionic/angular\";\n\nimport { Logger, LoggingService } from \"ionic-logging-service\";\n\nimport { LoggingViewerTranslation } from \"../logging-viewer-translation.model\";\n\n/**\n * Ionic modal containing [LoggingViewerComponent](LoggingViewerComponent.html),\n * [LoggingViewerLevelsComponent](LoggingViewerLevelsComponent.html) and\n * [LoggingViewerSearchComponent](LoggingViewerSearchComponent.html).\n */\n@Component({\n\tselector: \"ionic-logging-viewer-modal\",\n\ttemplateUrl: \"./logging-viewer-modal.component.html\",\n\tstyleUrls: [\"./logging-viewer-modal.component.scss\"]\n})\nexport class LoggingViewerModalComponent implements OnInit {\n\n\tprivate static languageEn = \"en\";\n\tprivate static languageDe = \"de\";\n\n\t/**\n\t * Language to be used for the modal.\n\t * Currently supported: en, de\n\t */\n\t@Input()\n\tpublic language: string;\n\n\t/**\n\t * Translation to be used for the modal.\n\t * If specified, the language is ignored.\n\t */\n\t@Input()\n\tpublic translation: LoggingViewerTranslation;\n\n\t/**\n\t * Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\t */\n\t@Input()\n\tpublic localStorageKeys: string;\n\n\t/**\n\t * Flag showing a delete button, which removes all existing log messages.\n\t */\n\t@Input()\n\tpublic allowClearLogs: boolean;\n\n\t/**\n\t * Flag controlling which close button will be shown.\n\t */\n\tpublic isAndroid: boolean;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate logger: Logger;\n\n\t// tslint:disable-next-line:completed-docs\n\tprivate translations: { [language: string]: LoggingViewerTranslation; };\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tplatform: Platform,\n\t\tprivate modalController: ModalController,\n\t\tprivate loggingService: LoggingService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Modal.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.isAndroid = platform.is(\"android\");\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initializes the LoggingViewerModalComponent.\n\t * It configures the supported translations.\n\t */\n\tpublic ngOnInit(): void {\n\t\t// prepare translations\n\t\tthis.translations = {};\n\t\tthis.translations[LoggingViewerModalComponent.languageEn] = {\n\t\t\tcancel: \"Cancel\",\n\t\t\tsearchPlaceholder: \"Search\",\n\t\t\ttitle: \"Logging\",\n\t\t};\n\t\tthis.translations[LoggingViewerModalComponent.languageDe] = {\n\t\t\tcancel: \"Abbrechen\",\n\t\t\tsearchPlaceholder: \"Suchen\",\n\t\t\ttitle: \"Logging\",\n\t\t};\n\t}\n\n\t/**\n\t * Eventhandler called by Ionic when the modal is opened.\n\t */\n\tpublic ionViewDidEnter(): void {\n\t\tconst methodName = \"ionViewDidEnter\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Eventhandler called when the cancel button is clicked.\n\t */\n\tpublic async onClose(): Promise {\n\t\tconst methodName = \"onClose\";\n\t\tthis.logger.entry(methodName);\n\n\t\tawait this.modalController.dismiss();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Eventhandler called when the clear button is clicked.\n\t */\n\tpublic onClearLogs(): void {\n\t\tconst methodName = \"onClearLogs\";\n\t\tthis.logger.entry(methodName);\n\n\t\tif (this.localStorageKeys) {\n\t\t\tfor (const localStorageKey of this.localStorageKeys.split(\",\")) {\n\t\t\t\tthis.loggingService.removeLogMessagesFromLocalStorage(localStorageKey);\n\t\t\t}\n\t\t} else {\n\t\t\tthis.loggingService.removeLogMessages();\n\t\t}\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Helper method returning the current translation:\n\t * - the property translation if defined\n\t * - the translation according property language if valid\n\t * - English translation, otherwise\n\t */\n\tpublic getTranslation(): LoggingViewerTranslation {\n\t\tif (typeof this.translation !== \"undefined\") {\n\t\t\treturn this.translation;\n\t\t} else if (typeof this.language !== \"undefined\" && typeof this.translations[this.language] === \"object\") {\n\t\t\treturn this.translations[this.language];\n\t\t} else {\n\t\t\treturn this.translations[LoggingViewerModalComponent.languageEn];\n\t\t}\n\t}\n}\n\n    \n\n    \n        \n\t\n\t\t{{ getTranslation().title }}\n\t\t\n\t\t\t\n\t\t\t\t{{ getTranslation().cancel }}\n\t\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\t\n\t\t\t\n\t\t\t\t\n\t\t\t\n\t\t\n\t\n\t\n\t\t\n\t\n\n\n\t\n\n    \n\n    \n                \n                    ./logging-viewer-modal.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '\t\t\t{{ getTranslation().title }}\t\t\t\t\t\t\t\t\t{{ getTranslation().cancel }}\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t'\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggingViewerModalProperties.html":{"url":"interfaces/LoggingViewerModalProperties.html","title":"interface - LoggingViewerModalProperties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggingViewerModalProperties\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logging-viewer-modal/logging-viewer-modal-properties.model.ts\n        \n\n            \n                Description\n            \n            \n                Describes all properties which can be passed to the\nLoggingViewerModalComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        allowClearLogs\n                                \n                                \n                                            Optional\n                                        language\n                                \n                                \n                                            Optional\n                                        localStorageKeys\n                                \n                                \n                                            Optional\n                                        translation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        allowClearLogs\n                                    \n                                \n                                \n                                    \n                                        allowClearLogs:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Flag showing a delete button, which removes all existing log messages.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        language\n                                    \n                                \n                                \n                                    \n                                        language:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Language to be used for the modal.\nCurrently supported: en, de\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localStorageKeys\n                                    \n                                \n                                \n                                    \n                                        localStorageKeys:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        translation\n                                    \n                                \n                                \n                                    \n                                        translation:         LoggingViewerTranslation\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LoggingViewerTranslation\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Translation to be used for the modal.\nIf specified, the language is ignored.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoggingViewerTranslation } from \"../logging-viewer-translation.model\";\n\n/**\n * Describes all properties which can be passed to the\n * [LoggingViewerModalComponent](../classes/LoggingViewerModalComponent.html).\n */\nexport interface LoggingViewerModalProperties {\n\n\t/**\n\t * Language to be used for the modal.\n\t * Currently supported: en, de\n\t */\n\tlanguage?: string;\n\n\t/**\n\t * Translation to be used for the modal.\n\t * If specified, the language is ignored.\n\t */\n\ttranslation?: LoggingViewerTranslation;\n\n\t/**\n\t * Comma-separated list of localStorageKeys. If set, the logs get loaded from localStorage instead of memory.\n\t */\n\tlocalStorageKeys?: string;\n\n\t/**\n\t * Flag showing a delete button, which removes all existing log messages.\n\t */\n\tallowClearLogs?: boolean;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggingViewerModule.html":{"url":"modules/LoggingViewerModule.html","title":"module - LoggingViewerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggingViewerModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/lib/logging-viewer.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoggingViewerComponent\n                        \n                        \n                            LoggingViewerLevelsComponent\n                        \n                        \n                            LoggingViewerModalComponent\n                        \n                        \n                            LoggingViewerSearchComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoggingViewerFilterService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoggingViewerComponent\n                        \n                        \n                            LoggingViewerLevelsComponent\n                        \n                        \n                            LoggingViewerModalComponent\n                        \n                        \n                            LoggingViewerSearchComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { LoggingViewerComponent } from \"./logging-viewer/logging-viewer.component\";\nimport { LoggingViewerFilterService } from \"./logging-viewer-filter.service\";\nimport { LoggingViewerLevelsComponent } from \"./logging-viewer-levels/logging-viewer-levels.component\";\nimport { LoggingViewerSearchComponent } from \"./logging-viewer-search/logging-viewer-search.component\";\nimport { LoggingViewerModalComponent } from \"./logging-viewer-modal/logging-viewer-modal.component\";\n\n@NgModule({\n\timports: [\n\t\tCommonModule,\n\t\tFormsModule,\n\t\tIonicModule\n\t],\n\tdeclarations: [\n\t\tLoggingViewerComponent,\n\t\tLoggingViewerSearchComponent,\n\t\tLoggingViewerLevelsComponent,\n\t\tLoggingViewerModalComponent\n\t],\n\tentryComponents: [\n\t],\n\texports: [\n\t\tLoggingViewerComponent,\n\t\tLoggingViewerSearchComponent,\n\t\tLoggingViewerLevelsComponent,\n\t\tLoggingViewerModalComponent\n\t],\n\tproviders: [\n\t\tLoggingViewerFilterService\n\t]\n})\nexport class LoggingViewerModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoggingViewerSearchComponent.html":{"url":"components/LoggingViewerSearchComponent.html","title":"component - LoggingViewerSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoggingViewerSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/lib/logging-viewer-search/logging-viewer-search.component.ts\n\n\n    \n        Description\n    \n    \n        Component for displaying the search bar for filtering the current logs.\nThe component can be embedded in any web page using:\n\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ionic-logging-viewer-search\n            \n\n            \n                styleUrls\n                ./logging-viewer-search.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./logging-viewer-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                search\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                ngOnDestroy\n                            \n                            \n                                    Public\n                                ngOnInit\n                            \n                            \n                                    Public\n                                onSearchChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loggingService: LoggingService, loggingViewerFilterService: LoggingViewerFilterService)\n                    \n                \n                        \n                            \n                                Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:35\n                            \n                        \n\n                \n                    \n                            Creates a new instance of the component.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loggingService\n                                                  \n                                                        \n                                                                    LoggingService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loggingViewerFilterService\n                                                  \n                                                        \n                                                                        LoggingViewerFilterService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :         string\n\n                    \n                \n                        \n                            \n                                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:27\n                            \n                        \n                \n                    \n                        Placeholder to be shown in the empty search bar.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnDestroy\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:77\n                \n            \n\n\n            \n                \n                    Clean up.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    ngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:56\n                \n            \n\n\n            \n                \n                    Initialize the component.\nThis is done by reading the filter data from LoggingViewerFilterService.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Public\n                            onSearchChanged\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    onSearchChanged()\n                \n            \n\n\n            \n                \n                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:89\n                \n            \n\n\n            \n                \n                    Callback when the search value was changed in the UI.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/lib/logging-viewer-search/logging-viewer-search.component.ts:32\n                            \n                        \n\n                \n                    \n                        Current search value.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy, Input } from \"@angular/core\";\n\nimport { Subscription } from \"rxjs\";\n\nimport { LoggingService, Logger } from \"ionic-logging-service\";\n\nimport { LoggingViewerFilterService } from \"../logging-viewer-filter.service\";\n\n/**\n * Component for displaying the search bar for filtering the current logs.\n *\n * The component can be embedded in any web page using:\n *\n * &lt;ionic-logging-viewer-search placeholder=\"Search\">&lt;/ionic-logging-viewer-search>\n */\n@Component({\n\tselector: \"ionic-logging-viewer-search\",\n\ttemplateUrl: \"./logging-viewer-search.component.html\",\n\tstyleUrls: [\"./logging-viewer-search.component.scss\"]\n})\nexport class LoggingViewerSearchComponent implements OnInit, OnDestroy {\n\n\t/**\n\t * Placeholder to be shown in the empty search bar.\n\t */\n\t@Input()\n\tpublic placeholder: string;\n\n\t/**\n\t * Current search value.\n\t */\n\tpublic search: string;\n\n\tprivate logger: Logger;\n\tprivate filterChangedSubscription: Subscription;\n\n\t/**\n\t * Creates a new instance of the component.\n\t */\n\tconstructor(\n\t\tloggingService: LoggingService,\n\t\tprivate loggingViewerFilterService: LoggingViewerFilterService) {\n\n\t\tthis.logger = loggingService.getLogger(\"Ionic.Logging.Viewer.Search.Component\");\n\t\tconst methodName = \"ctor\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Initialize the component.\n\t *\n\t * This is done by reading the filter data from [LoggingViewerFilterService](LoggingViewerFilterService.html).\n\t */\n\tpublic ngOnInit(): void {\n\t\tconst methodName = \"ngOnInit\";\n\t\tthis.logger.entry(methodName);\n\n\t\tif (!this.placeholder) {\n\t\t\tthis.placeholder = \"Search\";\n\t\t}\n\t\tthis.search = this.loggingViewerFilterService.search;\n\n\t\t// subscribe to loggingViewerFilterService.filterChanged event, to refresh,\n\t\t// when someone else modifies the search value\n\t\tthis.filterChangedSubscription = this.loggingViewerFilterService.filterChanged.subscribe(() => {\n\t\t\tthis.search = this.loggingViewerFilterService.search;\n\t\t});\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Clean up.\n\t */\n\tpublic ngOnDestroy(): void {\n\t\tconst methodName = \"ngOnDestroy\";\n\t\tthis.logger.entry(methodName);\n\n\t\tthis.filterChangedSubscription.unsubscribe();\n\n\t\tthis.logger.exit(methodName);\n\t}\n\n\t/**\n\t * Callback when the search value was changed in the UI.\n\t */\n\tpublic onSearchChanged(): void {\n\t\tconst methodName = \"onSearchChanged\";\n\t\tthis.logger.entry(methodName, this.search);\n\n\t\tthis.loggingViewerFilterService.search = this.search;\n\n\t\tthis.logger.exit(methodName);\n\t}\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./logging-viewer-search.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'LoggingViewerComponent', 'selector': 'ionic-logging-viewer'},{'name': 'LoggingViewerLevelsComponent', 'selector': 'ionic-logging-viewer-levels'},{'name': 'LoggingViewerModalComponent', 'selector': 'ionic-logging-viewer-modal'},{'name': 'LoggingViewerSearchComponent', 'selector': 'ionic-logging-viewer-search'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoggingViewerSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoggingViewerTranslation.html":{"url":"interfaces/LoggingViewerTranslation.html","title":"interface - LoggingViewerTranslation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoggingViewerTranslation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/lib/logging-viewer-translation.model.ts\n        \n\n            \n                Description\n            \n            \n                Describes all values needed in a translation for\nLoggingViewerModalComponent.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cancel\n                                \n                                \n                                        searchPlaceholder\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cancel\n                                    \n                                \n                                \n                                    \n                                        cancel:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Cancel button.\nThis text is shown only on iOS.\nOn Android or Windows, just an close-icon is used.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        searchPlaceholder\n                                    \n                                \n                                \n                                    \n                                        searchPlaceholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Placeholder for search bar.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Title of the modal.\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface LoggingViewerTranslation {\n\t/**\n\t * Title of the modal.\n\t */\n\ttitle: string;\n\n\t/**\n\t * Cancel button.\n\t * This text is shown only on iOS.\n\t * On Android or Windows, just an close-icon is used.\n\t */\n\tcancel: string;\n\n\t/**\n\t * Placeholder for search bar.\n\t */\n\tsearchPlaceholder: string;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/lib/logging-viewer-filter.service.ts\n            \n            injectable\n            LoggingViewerFilterService\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-levels/logging-viewer-levels.component.ts\n            \n            component\n            LoggingViewerLevelsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-modal/logging-viewer-modal-properties.model.ts\n            \n            interface\n            LoggingViewerModalProperties\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-modal/logging-viewer-modal.component.ts\n            \n            component\n            LoggingViewerModalComponent\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-search/logging-viewer-search.component.ts\n            \n            component\n            LoggingViewerSearchComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer-translation.model.ts\n            \n            interface\n            LoggingViewerTranslation\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/lib/logging-viewer/logging-viewer.component.ts\n            \n            component\n            LoggingViewerComponent\n            \n                100 %\n                (10/10)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Peer dependencies\n    \n    \n        \n            @angular/common : ^9.0.0\n        \n            @angular/core : ^9.0.0\n        \n            @ionic/angular : ^5.0.0\n        \n            ionic-logging-service : ^10.0.0\n        \n            ionicons : ^5.0.0\n    \n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nionic-logging-viewer\nThe dependencies used by the latest version are the same as needed for Ionic 5.0.0. For older versions use:\n\n\n\nionic-logging-viewer\nIonic\nAngular\n\n\n\n\n9.0.0\n>= 5.0.0\n^9.0.0\n\n\n8.0.0\n>= 4.7.0\n^8.0.0\n\n\n2.0.0\n>= 4.0.0\n^7.0.0\n\n\n1.0.1\n>= 3.9.0\n^5.0.0\n\n\n\nThe logging viewer is a small component which can be used in your Ionic app\nfor displaying the current logs, written by ionic-logging-service.\nThe viewer is meant for development and testing purposes, not for production.\nIt provides two components:\n\nLoggingViewerComponent:  \ncan be embedded in any web page using the directive\nLoggingViewerModalComponent:  \na complete implemented modal containing the LoggingViewerComponent\n\nAdditionally, there are two components for filtering the data:\n\nLoggingViewerLevelsComponent:\nallows filtering by log level\nLoggingViewerSearchComponent:\nallows filtering by an arbitrary expression\n\nA sample app using these components is ionic-logging-viewer-app.\nScreenshots\n\nUsage\nnpm package\nnpm install ionic-logging-viewer --saveimport module\nImport the LoggingViewerModule in to your app.module.ts:\nimport { LoggingViewerModule } from \"ionic-logging-viewer\";\n...\n@NgModule({\n  imports: [\n    IonicModule.forRoot(AppComponent),\n    LoggingViewerModule\n  ],\n  ...\n})LoggingViewerComponent directive\nIf you want to use the directive in one of your pages, just add\nLoggingViewerLevelsComponent and LoggingViewerSearchComponent directives\nFor filtering the log messages, you can add also these directives to your page.\nIt is recommended to include them in ion-toolbar, but it is not necessary:\n\n  \n\n\n  \nLoggingViewerModalComponent modal\npublic async openModal(): Promise {\n  let componentProps: LoggingViewerModalProperties = { language: this.selectedLanguage };\n  const modal = await this.modalController.create({\n    component: LoggingViewerModalComponent,\n    componentProps: componentProps\n  });\n  await modal.present();\n}multi language support\nThe LoggingViewerComponent does not need multi language support, since it just\ndisplays the logged data. The same applies to LoggingViewerLevelsComponent\nand LoggingViewerSearchComponent.\nBut for the LoggingViewerModalComponent, multi language support is needed,\nsince the modal contains some translatable texts. Therefore,\nloggingViewerModalManager.openModal() has a language parameter, which you can\nuse to select the language. Currently en and de are supported.\nIf you need another language, either open an issue, or just use the translation parameter.\nThis parameter you can use to pass your completely own texts.\nJust fill the LoggingViewerTranslation object.\nAPI\nsee API documentation.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        LoggingViewerModule\n                    \n                    \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n\n\n    \n        \n            \n                \n                    \n                    \n                        1 Module\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
